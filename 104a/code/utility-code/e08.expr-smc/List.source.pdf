%PDF-1.4
5 0 obj
<</Length 6 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:35)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/1)Tj
/R12 14 Tf
-260.054 -2.7 Td
(README)Tj
-86.5102 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
(1:)Tj
12 TL
T*[(2:)-600(Simple compiler:  Translate exprs to stack machine insns.)]TJ
(3:)'
T*[(4:)-600(Syntax:     the ETF grammar)]TJ
T*[(5:)-600(Lexical:    identifiers, numbers)]TJ
T*[(6:)-600(Comments:   // and /**/ C-style)]TJ
T*[(7:)-600(Directives: #-cpp style)]TJ
T*[(8:)-600(Activity:   Build AST)]TJ
T*[(9:)-600(Codegen:    Stack machine code)]TJ
-6.6 -12 Td
(10:)Tj
T*[(11:)-600($Id: README,v 1.1 2015-07-08 13:29:32-07 - - $)]TJ
(12:)'
ET
Q
Q
endstream
endobj
6 0 obj
988
endobj
19 0 obj
<</Length 20 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:35)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/1)Tj
/R12 14 Tf
-248.189 -2.7 Td
(lexer.l)Tj
-98.3754 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(/* $Id: lexer.l,v 1.5 2016-08-18 15:05:42-07 - - $ */)]TJ
12 TL
(2:)'
T*[(3:)-600(%{)]TJ
(4:)'
T*[(5:)-600(#include "lyutils.h")]TJ
(6:)'
T*[(7:)-600(#define YY_USER_ACTION  { lexer::advance\(\); })]TJ
(8:)'
T*[(9:)-600(#define RETURN\(SYMBOL\) { \\)]TJ
-6.6 -12 Td
[(10:)-600(   yylval = new astree \(SYMBOL, lexer::lloc, yytext\); \\)]TJ
T*[(11:)-600(   return SYMBOL; \\)]TJ
T*[(12:)-600(})]TJ
(13:)'
T*[(14:)-600(%})]TJ
(15:)'
T*[(16:)-600(%option 8bit)]TJ
T*[(17:)-600(%option debug)]TJ
T*[(18:)-600(%option nodefault)]TJ
T*[(19:)-600(%option noinput)]TJ
T*[(20:)-600(%option nounput)]TJ
T*[(21:)-600(%option noyywrap)]TJ
T*[(22:)-600(%option warn)]TJ
T*[(23:)-600(/*%option verbose*/)]TJ
(24:)'
T*[(25:)-600(LETTER          [A-Za-z_])]TJ
T*[(26:)-600(DIGIT           [0-9])]TJ
T*[(27:)-600(MANTISSA        \({DIGIT}+\\.?{DIGIT}*|\\.{DIGIT}+\))]TJ
T*[(28:)-600(EXPONENT        \([Ee][+-]?{DIGIT}+\))]TJ
T*[(29:)-600(NUMBER          \({MANTISSA}{EXPONENT}?\))]TJ
T*[(30:)-600(NOTNUMBER       \({MANTISSA}[Ee][+-]?\))]TJ
T*[(31:)-600(IDENT           \({LETTER}\({LETTER}|{DIGIT}\)*\))]TJ
(32:)'
T*[(33:)-600(%%)]TJ
(34:)'
T*[(35:)-600("#".*           { lexer::include\(\); })]TJ
T*[(36:)-600([ \\t]+          { })]TJ
T*[(37:)-600(\\n              { lexer::newline\(\); })]TJ
(38:)'
T*[(39:)-600({NUMBER}        { RETURN \(NUMBER\); })]TJ
T*[(40:)-600({IDENT}         { RETURN \(IDENT\); })]TJ
T*[(41:)-600("="             { RETURN \('='\); })]TJ
T*[(42:)-600("+"             { RETURN \('+'\); })]TJ
T*[(43:)-600("-"             { RETURN \('-'\); })]TJ
T*[(44:)-600("*"             { RETURN \('*'\); })]TJ
T*[(45:)-600("/"             { RETURN \('/'\); })]TJ
T*[(46:)-600("^"             { RETURN \('^'\); })]TJ
T*[(47:)-600("\("             { RETURN \('\('\); })]TJ
T*[(48:)-600("\)"             { RETURN \('\)'\); })]TJ
T*[(49:)-600(";"             { RETURN \(';'\); })]TJ
(50:)'
T*[(51:)-600({NOTNUMBER}     { lexer::badtoken \(yytext\); RETURN \(NUMBER\); })]TJ
T*[(52:)-600(.               { lexer::badchar \(*yytext\); })]TJ
(53:)'
T*[(54:)-600(%%)]TJ
(55:)'
ET
Q
Q
endstream
endobj
20 0 obj
2616
endobj
24 0 obj
<</Length 25 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:35)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-252.851 -2.7 Td
(parser.y)Tj
-93.7137 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(// $Id: parser.y,v 1.14 2016-10-06 16:26:41-07 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(%{)]TJ
(4:)'
T*[(5:)-600(#include <assert.h>)]TJ
T*[(6:)-600(#include <stdlib.h>)]TJ
T*[(7:)-600(#include <string.h>)]TJ
(8:)'
T*[(9:)-600(#include "astree.h")]TJ
-6.6 -12 Td
[(10:)-600(#include "lyutils.h")]TJ
(11:)'
T*[(12:)-600(%})]TJ
(13:)'
T*[(14:)-600(%debug)]TJ
T*[(15:)-600(%defines)]TJ
T*[(16:)-600(%error-verbose)]TJ
T*[(17:)-600(%token-table)]TJ
T*[(18:)-600(%verbose)]TJ
(19:)'
T*[(20:)-600(%destructor { destroy \($$\); } <>)]TJ
T*[(21:)-600(%printer { astree::dump \(yyoutput, $$\); } <>)]TJ
(22:)'
T*[(23:)-600(%initial-action {)]TJ
T*[(24:)-600(   parser::root = new astree \(ROOT, {0, 0, 0}, "<<ROOT>>"\);)]TJ
T*[(25:)-600(})]TJ
(26:)'
T*[(27:)-600(%token  ROOT IDENT NUMBER)]TJ
(28:)'
T*[(29:)-600(%right  '=')]TJ
T*[(30:)-600(%left   '+' '-')]TJ
T*[(31:)-600(%left   '*' '/')]TJ
T*[(32:)-600(%right  '^')]TJ
T*[(33:)-600(%right  POS NEG)]TJ
(34:)'
T*[(35:)-600(%start  program)]TJ
(36:)'
ET
Q
Q
endstream
endobj
25 0 obj
1538
endobj
29 0 obj
<</Length 30 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:35)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(2)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-252.851 -2.7 Td
(parser.y)Tj
-93.7137 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
(37:)Tj
12 TL
T*[(38:)-600(%%)]TJ
(39:)'
T*[(40:)-600(program : stmtseq               { $$ = $1 = nullptr; })]TJ
T*[(41:)-600(        ;)]TJ
(42:)'
T*[(43:)-600(stmtseq : stmtseq expr ';'      { destroy \($3\); $$ = $1->adopt \($2\); })]TJ
T*[(44:)-600(        | stmtseq error ';'     { destroy \($3\); $$ = $1; })]TJ
T*[(45:)-600(        | stmtseq ';'           { destroy \($2\); $$ = $1; })]TJ
T*[(46:)-600(        |                       { $$ = parser::root; })]TJ
T*[(47:)-600(        ;)]TJ
(48:)'
T*[(49:)-600(expr    : expr '=' expr         { $$ = $2->adopt \($1, $3\); })]TJ
T*[(50:)-600(        | expr '+' expr         { $$ = $2->adopt \($1, $3\); })]TJ
T*[(51:)-600(        | expr '-' expr         { $$ = $2->adopt \($1, $3\); })]TJ
T*[(52:)-600(        | expr '*' expr         { $$ = $2->adopt \($1, $3\); })]TJ
T*[(53:)-600(        | expr '/' expr         { $$ = $2->adopt \($1, $3\); })]TJ
T*[(54:)-600(        | expr '^' expr         { $$ = $2->adopt \($1, $3\); })]TJ
T*[(55:)-600(        | '+' expr %prec POS    { $$ = $1->adopt_sym \($2, POS\); })]TJ
T*[(56:)-600(        | '-' expr %prec NEG    { $$ = $1->adopt_sym \($2, NEG\); })]TJ
T*[(57:)-600(        | '\(' expr '\)'          { destroy \($1, $3\); $$ = $2; })]TJ
T*[(58:)-600(        | IDENT                 { $$ = $1; })]TJ
T*[(59:)-600(        | NUMBER                { $$ = $1; })]TJ
T*[(60:)-600(        ;)]TJ
(61:)'
T*[(62:)-600(%%)]TJ
(63:)'
T*[(64:)-600(const char* parser::get_tname \(int symbol\) {)]TJ
T*[(65:)-600(   return yytname [YYTRANSLATE \(symbol\)];)]TJ
T*[(66:)-600(})]TJ
(67:)'
ET
Q
Q
endstream
endobj
30 0 obj
2111
endobj
34 0 obj
<</Length 35 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:35)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/1)Tj
/R12 14 Tf
-252.074 -2.7 Td
(astree.h)Tj
-94.4906 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(// $Id: astree.h,v 1.10 2016-10-06 16:42:35-07 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(#ifndef __ASTREE_H__)]TJ
T*[(4:)-600(#define __ASTREE_H__)]TJ
(5:)'
T*[(6:)-600(#include <string>)]TJ
T*[(7:)-600(#include <vector>)]TJ
T*[(8:)-600(using namespace std;)]TJ
(9:)'
-6.6 -12 Td
[(10:)-600(#include "auxlib.h")]TJ
(11:)'
T*[(12:)-600(struct location {)]TJ
T*[(13:)-600(   size_t filenr;)]TJ
T*[(14:)-600(   size_t linenr;)]TJ
T*[(15:)-600(   size_t offset;)]TJ
T*[(16:)-600(};)]TJ
(17:)'
T*[(18:)-600(struct astree {)]TJ
(19:)'
T*[(20:)-600(   // Fields.)]TJ
T*[(21:)-600(   int symbol;               // token code)]TJ
T*[(22:)-600(   location lloc;            // source location)]TJ
T*[(23:)-600(   const string* lexinfo;    // pointer to lexical information)]TJ
T*[(24:)-600(   vector<astree*> children; // children of this n-way node)]TJ
(25:)'
T*[(26:)-600(   // Functions.)]TJ
T*[(27:)-600(   astree \(int symbol, const location&, const char* lexinfo\);)]TJ
T*[(28:)-600(   ~astree\(\);)]TJ
T*[(29:)-600(   astree* adopt \(astree* child1, astree* child2 = nullptr\);)]TJ
T*[(30:)-600(   astree* adopt_sym \(astree* child, int symbol\);)]TJ
T*[(31:)-600(   void dump_node \(FILE*\);)]TJ
T*[(32:)-600(   void dump_tree \(FILE*, int depth = 0\);)]TJ
T*[(33:)-600(   static void dump \(FILE* outfile, astree* tree\);)]TJ
T*[(34:)-600(   static void print \(FILE* outfile, astree* tree, int depth = 0\);)]TJ
T*[(35:)-600(};)]TJ
(36:)'
T*[(37:)-600(void destroy \(astree* tree1, astree* tree2 = nullptr\);)]TJ
(38:)'
T*[(39:)-600(void errllocprintf \(const location&, const char* format, const char*\);)]TJ
(40:)'
T*[(41:)-600(#endif)]TJ
(42:)'
ET
Q
Q
endstream
endobj
35 0 obj
2187
endobj
39 0 obj
<</Length 40 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:35)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-258.682 -2.7 Td
(astree.cpp)Tj
-87.8828 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(// $Id: astree.cpp,v 1.14 2016-08-18 15:05:42-07 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(#include <assert.h>)]TJ
T*[(4:)-600(#include <inttypes.h>)]TJ
T*[(5:)-600(#include <stdarg.h>)]TJ
T*[(6:)-600(#include <stdio.h>)]TJ
T*[(7:)-600(#include <stdlib.h>)]TJ
T*[(8:)-600(#include <string.h>)]TJ
(9:)'
-6.6 -12 Td
[(10:)-600(#include "astree.h")]TJ
T*[(11:)-600(#include "string_set.h")]TJ
T*[(12:)-600(#include "lyutils.h")]TJ
(13:)'
T*[(14:)-600(astree::astree \(int symbol_, const location& lloc_, const char* info\) {)]TJ
T*[(15:)-600(   symbol = symbol_;)]TJ
T*[(16:)-600(   lloc = lloc_;)]TJ
T*[(17:)-600(   lexinfo = string_set::intern \(info\);)]TJ
T*[(18:)-600(   // vector defaults to empty -- no children)]TJ
T*[(19:)-600(})]TJ
(20:)'
T*[(21:)-600(astree::~astree\(\) {)]TJ
T*[(22:)-600(   while \(not children.empty\(\)\) {)]TJ
T*[(23:)-600(      astree* child = children.back\(\);)]TJ
T*[(24:)-600(      children.pop_back\(\);)]TJ
T*[(25:)-600(      delete child;)]TJ
T*[(26:)-600(   })]TJ
T*[(27:)-600(   if \(yydebug\) {)]TJ
T*[(28:)-600(      fprintf \(stderr, "Deleting astree \("\);)]TJ
T*[(29:)-600(      astree::dump \(stderr, this\);)]TJ
T*[(30:)-600(      fprintf \(stderr, "\)\\n"\);)]TJ
T*[(31:)-600(   })]TJ
T*[(32:)-600(})]TJ
(33:)'
T*[(34:)-600(astree* astree::adopt \(astree* child1, astree* child2\) {)]TJ
T*[(35:)-600(   if \(child1 != nullptr\) children.push_back \(child1\);)]TJ
T*[(36:)-600(   if \(child2 != nullptr\) children.push_back \(child2\);)]TJ
T*[(37:)-600(   return this;)]TJ
T*[(38:)-600(})]TJ
(39:)'
T*[(40:)-600(astree* astree::adopt_sym \(astree* child, int symbol_\) {)]TJ
T*[(41:)-600(   symbol = symbol_;)]TJ
T*[(42:)-600(   return adopt \(child\);)]TJ
T*[(43:)-600(})]TJ
(44:)'
ET
Q
Q
endstream
endobj
40 0 obj
2274
endobj
44 0 obj
<</Length 45 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:35)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(2)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-258.682 -2.7 Td
(astree.cpp)Tj
-87.8828 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
(45:)Tj
12 TL
T*[(46:)-600(void astree::dump_node \(FILE* outfile\) {)]TJ
T*[(47:)-600(   fprintf \(outfile, "%p->{%s %zd.%zd.%zd \\"%s\\":",)]TJ
T*[(48:)-600(            this, parser::get_tname \(symbol\),)]TJ
T*[(49:)-600(            lloc.filenr, lloc.linenr, lloc.offset,)]TJ
T*[(50:)-600(            lexinfo->c_str\(\)\);)]TJ
T*[(51:)-600(   for \(size_t child = 0; child < children.size\(\); ++child\) {)]TJ
T*[(52:)-600(      fprintf \(outfile, " %p", children.at\(child\)\);)]TJ
T*[(53:)-600(   })]TJ
T*[(54:)-600(})]TJ
(55:)'
T*[(56:)-600(void astree::dump_tree \(FILE* outfile, int depth\) {)]TJ
T*[(57:)-600(   fprintf \(outfile, "%*s", depth * 3, ""\);)]TJ
T*[(58:)-600(   dump_node \(outfile\);)]TJ
T*[(59:)-600(   fprintf \(outfile, "\\n"\);)]TJ
T*[(60:)-600(   for \(astree* child: children\) child->dump_tree \(outfile, depth + 1\);)]TJ
T*[(61:)-600(   fflush \(NULL\);)]TJ
T*[(62:)-600(})]TJ
(63:)'
T*[(64:)-600(void astree::dump \(FILE* outfile, astree* tree\) {)]TJ
T*[(65:)-600(   if \(tree == nullptr\) fprintf \(outfile, "nullptr"\);)]TJ
T*[(66:)-600(                   else tree->dump_node \(outfile\);)]TJ
T*[(67:)-600(})]TJ
(68:)'
T*[(69:)-600(void astree::print \(FILE* outfile, astree* tree, int depth\) {)]TJ
T*[(70:)-600(   fprintf \(outfile, "; %*s", depth * 3, ""\);)]TJ
T*[(71:)-600(   fprintf \(outfile, "%s \\"%s\\" \(%zd.%zd.%zd\)\\n",)]TJ
T*[(72:)-600(            parser::get_tname \(tree->symbol\), tree->lexinfo->c_str\(\),)]TJ
T*[(73:)-600(            tree->lloc.filenr, tree->lloc.linenr, tree->lloc.offset\);)]TJ
T*[(74:)-600(   for \(astree* child: tree->children\) {)]TJ
T*[(75:)-600(      astree::print \(outfile, child, depth + 1\);)]TJ
T*[(76:)-600(   })]TJ
T*[(77:)-600(})]TJ
(78:)'
T*[(79:)-600(void destroy \(astree* tree1, astree* tree2\) {)]TJ
T*[(80:)-600(   if \(tree1 != nullptr\) delete tree1;)]TJ
T*[(81:)-600(   if \(tree2 != nullptr\) delete tree2;)]TJ
T*[(82:)-600(})]TJ
(83:)'
T*[(84:)-600(void errllocprintf \(const location& lloc, const char* format,)]TJ
T*[(85:)-600(                    const char* arg\) {)]TJ
T*[(86:)-600(   static char buffer[0x1000];)]TJ
T*[(87:)-600(   assert \(sizeof buffer > strlen \(format\) + strlen \(arg\)\);)]TJ
T*[(88:)-600(   snprintf \(buffer, sizeof buffer, format, arg\);)]TJ
T*[(89:)-600(   errprintf \("%s:%zd.%zd: %s", )]TJ
T*[(90:)-600(              lexer::filename \(lloc.filenr\), lloc.linenr, lloc.offset,)]TJ
T*[(91:)-600(              buffer\);)]TJ
T*[(92:)-600(})]TJ
ET
Q
Q
endstream
endobj
45 0 obj
3016
endobj
49 0 obj
<</Length 50 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:35)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/1)Tj
/R12 14 Tf
-253.257 -2.7 Td
(lyutils.h)Tj
-93.3074 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(// $Id: lyutils.h,v 1.4 2016-10-06 16:42:35-07 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(#ifndef __UTILS_H__)]TJ
T*[(4:)-600(#define __UTILS_H__)]TJ
(5:)'
T*[(6:)-600(// Lex and Yacc interface utility.)]TJ
(7:)'
T*[(8:)-600(#include <string>)]TJ
T*[(9:)-600(#include <vector>)]TJ
-6.6 -12 Td
[(10:)-600(using namespace std;)]TJ
(11:)'
T*[(12:)-600(#include <stdio.h>)]TJ
(13:)'
T*[(14:)-600(#include "astree.h")]TJ
T*[(15:)-600(#include "auxlib.h")]TJ
(16:)'
T*[(17:)-600(extern FILE* yyin;)]TJ
T*[(18:)-600(extern char* yytext; )]TJ
T*[(19:)-600(extern int yy_flex_debug;)]TJ
T*[(20:)-600(extern int yydebug;)]TJ
T*[(21:)-600(extern size_t yyleng; )]TJ
(22:)'
T*[(23:)-600(int yylex\(\);)]TJ
T*[(24:)-600(int yylex_destroy\(\);)]TJ
T*[(25:)-600(int yyparse\(\);)]TJ
T*[(26:)-600(void yyerror \(const char* message\);)]TJ
(27:)'
T*[(28:)-600(struct lexer {)]TJ
T*[(29:)-600(   static bool interactive;)]TJ
T*[(30:)-600(   static location lloc;)]TJ
T*[(31:)-600(   static size_t last_yyleng;)]TJ
T*[(32:)-600(   static vector<string> filenames;)]TJ
T*[(33:)-600(   static const string* filename \(int filenr\);)]TJ
T*[(34:)-600(   static void newfilename \(const string& filename\);)]TJ
T*[(35:)-600(   static void advance\(\);)]TJ
T*[(36:)-600(   static void newline\(\);)]TJ
T*[(37:)-600(   static void badchar \(unsigned char bad\);)]TJ
T*[(38:)-600(   static void badtoken \(char* lexeme\);)]TJ
T*[(39:)-600(   static void include\(\);)]TJ
T*[(40:)-600(};)]TJ
(41:)'
T*[(42:)-600(struct parser {)]TJ
T*[(43:)-600(   static astree* root;)]TJ
T*[(44:)-600(   static const char* get_tname \(int symbol\);)]TJ
T*[(45:)-600(};)]TJ
(46:)'
T*[(47:)-600(#define YYSTYPE astree*)]TJ
T*[(48:)-600(#include "yyparse.h")]TJ
(49:)'
T*[(50:)-600(#endif)]TJ
(51:)'
ET
Q
Q
endstream
endobj
50 0 obj
2296
endobj
54 0 obj
<</Length 55 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:35)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-259.865 -2.7 Td
(lyutils.cpp)Tj
-86.6996 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(// $Id: lyutils.cpp,v 1.3 2016-10-06 16:42:35-07 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(#include <assert.h>)]TJ
T*[(4:)-600(#include <ctype.h>)]TJ
T*[(5:)-600(#include <stdio.h>)]TJ
T*[(6:)-600(#include <stdlib.h>)]TJ
T*[(7:)-600(#include <string.h>)]TJ
(8:)'
T*[(9:)-600(#include "auxlib.h")]TJ
-6.6 -12 Td
[(10:)-600(#include "lyutils.h")]TJ
(11:)'
T*[(12:)-600(bool lexer::interactive = true;)]TJ
T*[(13:)-600(location lexer::lloc = {0, 1, 0};)]TJ
T*[(14:)-600(size_t lexer::last_yyleng = 0;)]TJ
T*[(15:)-600(vector<string> lexer::filenames;)]TJ
(16:)'
T*[(17:)-600(astree* parser::root = nullptr;)]TJ
(18:)'
T*[(19:)-600(const string* lexer::filename \(int filenr\) {)]TJ
T*[(20:)-600(   return &lexer::filenames.at\(filenr\);)]TJ
T*[(21:)-600(})]TJ
(22:)'
T*[(23:)-600(void lexer::newfilename \(const string& filename\) {)]TJ
T*[(24:)-600(   lexer::lloc.filenr = lexer::filenames.size\(\);)]TJ
T*[(25:)-600(   lexer::filenames.push_back \(filename\);)]TJ
T*[(26:)-600(})]TJ
(27:)'
T*[(28:)-600(void lexer::advance\(\) {)]TJ
T*[(29:)-600(   if \(not interactive\) {)]TJ
T*[(30:)-600(      if \(lexer::lloc.offset == 0\) {)]TJ
T*[(31:)-600(         printf \(";%2zd.%3zd: ",)]TJ
T*[(32:)-600(                 lexer::lloc.filenr, lexer::lloc.linenr\);)]TJ
T*[(33:)-600(      })]TJ
T*[(34:)-600(      printf \("%s", yytext\);)]TJ
T*[(35:)-600(   })]TJ
T*[(36:)-600(   lexer::lloc.offset += last_yyleng;)]TJ
T*[(37:)-600(   last_yyleng = yyleng;)]TJ
T*[(38:)-600(})]TJ
(39:)'
T*[(40:)-600(void lexer::newline\(\) {)]TJ
T*[(41:)-600(   ++lexer::lloc.linenr;)]TJ
T*[(42:)-600(   lexer::lloc.offset = 0;)]TJ
T*[(43:)-600(})]TJ
(44:)'
T*[(45:)-600(void lexer::badchar \(unsigned char bad\) {)]TJ
T*[(46:)-600(   char buffer[16];)]TJ
T*[(47:)-600(   snprintf \(buffer, sizeof buffer,)]TJ
T*[(48:)-600(             isgraph \(bad\) ? "%c" : "\\\\%03o", bad\);)]TJ
T*[(49:)-600(   errllocprintf \(lexer::lloc, "invalid source character \(%s\)\\n",)]TJ
T*[(50:)-600(                  buffer\);)]TJ
T*[(51:)-600(})]TJ
(52:)'
ET
Q
Q
endstream
endobj
55 0 obj
2562
endobj
59 0 obj
<</Length 60 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:35)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(2)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-259.865 -2.7 Td
(lyutils.cpp)Tj
-86.6996 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
(53:)Tj
12 TL
T*[(54:)-600(void lexer::badtoken \(char* lexeme\) {)]TJ
T*[(55:)-600(   errllocprintf \(lexer::lloc, "invalid token \(%s\)\\n", lexeme\);)]TJ
T*[(56:)-600(})]TJ
(57:)'
T*[(58:)-600(void lexer::include\(\) {)]TJ
T*[(59:)-600(   size_t linenr;)]TJ
T*[(60:)-600(   static char filename[0x1000];)]TJ
T*[(61:)-600(   assert \(sizeof filename > strlen \(yytext\)\);)]TJ
T*[(62:)-600(   int scan_rc = sscanf \(yytext, "# %zd \\"%[^\\"]\\"", &linenr, filename\);)]TJ
T*[(63:)-600(   if \(scan_rc != 2\) {)]TJ
T*[(64:)-600(      errprintf \("%s: invalid directive, ignored\\n", yytext\);)]TJ
T*[(65:)-600(   }else {)]TJ
T*[(66:)-600(      if \(yy_flex_debug\) {)]TJ
T*[(67:)-600(         fprintf \(stderr, "--included # %zd \\"%s\\"\\n",)]TJ
T*[(68:)-600(                  linenr, filename\);)]TJ
T*[(69:)-600(      })]TJ
T*[(70:)-600(      lexer::lloc.linenr = linenr - 1;)]TJ
T*[(71:)-600(      lexer::newfilename \(filename\);)]TJ
T*[(72:)-600(   })]TJ
T*[(73:)-600(})]TJ
(74:)'
T*[(75:)-600(void yyerror \(const char* message\) {)]TJ
T*[(76:)-600(   assert \(not lexer::filenames.empty\(\)\);)]TJ
T*[(77:)-600(   errllocprintf \(lexer::lloc, "%s\\n", message\);)]TJ
T*[(78:)-600(})]TJ
(79:)'
ET
Q
Q
endstream
endobj
60 0 obj
1745
endobj
64 0 obj
<</Length 65 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:35)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/1)Tj
/R12 14 Tf
-262.973 -2.7 Td
(string_set.h)Tj
-83.5918 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(// $Id: string_set.h,v 1.2 2016-08-18 15:12:57-07 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(#ifndef __STRING_SET__)]TJ
T*[(4:)-600(#define __STRING_SET__)]TJ
(5:)'
T*[(6:)-600(#include <string>)]TJ
T*[(7:)-600(#include <unordered_set>)]TJ
T*[(8:)-600(using namespace std;)]TJ
(9:)'
-6.6 -12 Td
[(10:)-600(#include <stdio.h>)]TJ
(11:)'
T*[(12:)-600(struct string_set {)]TJ
T*[(13:)-600(   string_set\(\);)]TJ
T*[(14:)-600(   static unordered_set<string> set;)]TJ
T*[(15:)-600(   static const string* intern \(const char*\);)]TJ
T*[(16:)-600(   static void dump \(FILE*\);)]TJ
T*[(17:)-600(};)]TJ
(18:)'
T*[(19:)-600(#endif)]TJ
(20:)'
ET
Q
Q
endstream
endobj
65 0 obj
1179
endobj
69 0 obj
<</Length 70 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:35)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/1)Tj
/R12 14 Tf
-269.58 -2.7 Td
(string_set.cpp)Tj
-76.984 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(// $Id: string_set.cpp,v 1.2 2016-08-18 15:12:57-07 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(#include <string>)]TJ
T*[(4:)-600(#include <unordered_set>)]TJ
T*[(5:)-600(using namespace std;)]TJ
(6:)'
T*[(7:)-600(#include "string_set.h")]TJ
(8:)'
T*[(9:)-600(unordered_set<string> string_set::set;)]TJ
-6.6 -12 Td
(10:)Tj
T*[(11:)-600(string_set::string_set\(\) {)]TJ
T*[(12:)-600(   set.max_load_factor \(0.5\);)]TJ
T*[(13:)-600(})]TJ
(14:)'
T*[(15:)-600(const string* string_set::intern \(const char* string\) {)]TJ
T*[(16:)-600(   auto handle = set.insert \(string\);)]TJ
T*[(17:)-600(   return &*handle.first;)]TJ
T*[(18:)-600(})]TJ
(19:)'
T*[(20:)-600(void string_set::dump \(FILE* out\) {)]TJ
T*[(21:)-600(   static unordered_set<string>::hasher hash_fn)]TJ
T*[(22:)-600(               = string_set::set.hash_function\(\);)]TJ
T*[(23:)-600(   size_t max_bucket_size = 0;)]TJ
T*[(24:)-600(   for \(size_t bucket = 0; bucket < set.bucket_count\(\); ++bucket\) {)]TJ
T*[(25:)-600(      bool need_index = true;)]TJ
T*[(26:)-600(      size_t curr_size = set.bucket_size \(bucket\);)]TJ
T*[(27:)-600(      if \(max_bucket_size < curr_size\) max_bucket_size = curr_size;)]TJ
T*[(28:)-600(      for \(auto itor = set.cbegin \(bucket\);)]TJ
T*[(29:)-600(           itor != set.cend \(bucket\); ++itor\) {)]TJ
T*[(30:)-600(         if \(need_index\) fprintf \(out, "string_set[%4zu]: ", bucket\);)]TJ
T*[(31:)-600(                    else fprintf \(out, "          %4s   ", ""\);)]TJ
T*[(32:)-600(         need_index = false;)]TJ
T*[(33:)-600(         const string* str = &*itor;)]TJ
T*[(34:)-600(         fprintf \(out, "%22zu %p->\\"%s\\"\\n", hash_fn\(*str\),)]TJ
T*[(35:)-600(                  str, str->c_str\(\)\);)]TJ
T*[(36:)-600(      })]TJ
T*[(37:)-600(   })]TJ
T*[(38:)-600(   fprintf \(out, "load_factor = %.3f\\n", set.load_factor\(\)\);)]TJ
T*[(39:)-600(   fprintf \(out, "bucket_count = %zu\\n", set.bucket_count\(\)\);)]TJ
T*[(40:)-600(   fprintf \(out, "max_bucket_size = %zu\\n", max_bucket_size\);)]TJ
T*[(41:)-600(})]TJ
(42:)'
ET
Q
Q
endstream
endobj
70 0 obj
2588
endobj
74 0 obj
<</Length 75 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:35)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/1)Tj
/R12 14 Tf
-255.581 -2.7 Td
(emitter.h)Tj
-90.9836 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(// $Id: emitter.h,v 1.1 2015-07-09 14:08:38-07 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(#ifndef __EMIT_H__)]TJ
T*[(4:)-600(#define __EMIT_H__)]TJ
(5:)'
T*[(6:)-600(#include "astree.h")]TJ
(7:)'
T*[(8:)-600(void emit_sm_code \(astree*\);)]TJ
(9:)'
-6.6 -12 Td
[(10:)-600(#endif)]TJ
(11:)'
ET
Q
Q
endstream
endobj
75 0 obj
832
endobj
79 0 obj
<</Length 80 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:35)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-262.189 -2.7 Td
(emitter.cpp)Tj
-84.3758 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(// $Id: emitter.cpp,v 1.4 2016-10-06 16:42:35-07 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(#include <assert.h>)]TJ
T*[(4:)-600(#include <stdio.h>)]TJ
(5:)'
T*[(6:)-600(#include "astree.h")]TJ
T*[(7:)-600(#include "emitter.h")]TJ
T*[(8:)-600(#include "auxlib.h")]TJ
T*[(9:)-600(#include "lyutils.h")]TJ
-6.6 -12 Td
(10:)Tj
T*[(11:)-600(void emit \(astree* root\);)]TJ
(12:)'
T*[(13:)-600(void emit_insn \(const char* opcode, const char* operand, astree* tree\) {)]TJ
T*[(14:)-600(   printf \("%-10s%-10s%-20s; %s %zd.%zd\\n", "",)]TJ
T*[(15:)-600(            opcode, operand,)]TJ
T*[(16:)-600(            lexer::filename \(tree->lloc.filenr\)->c_str\(\),)]TJ
T*[(17:)-600(            tree->lloc.linenr, tree->lloc.offset\);)]TJ
T*[(18:)-600(})]TJ
(19:)'
T*[(20:)-600(void postorder \(astree* tree\) {)]TJ
T*[(21:)-600(   assert \(tree != NULL\);)]TJ
T*[(22:)-600(   for \(size_t child = 0; child < tree->children.size\(\); ++child\) {)]TJ
T*[(23:)-600(      emit \(tree->children.at\(child\)\);)]TJ
T*[(24:)-600(   })]TJ
T*[(25:)-600(})]TJ
(26:)'
T*[(27:)-600(void postorder_emit_stmts \(astree* tree\) {)]TJ
T*[(28:)-600(   postorder \(tree\);)]TJ
T*[(29:)-600(})]TJ
(30:)'
T*[(31:)-600(void postorder_emit_oper \(astree* tree, const char* opcode\) {)]TJ
T*[(32:)-600(   postorder \(tree\);)]TJ
T*[(33:)-600(   emit_insn \(opcode, "", tree\);)]TJ
T*[(34:)-600(})]TJ
(35:)'
T*[(36:)-600(void postorder_emit_semi \(astree* tree\) {)]TJ
T*[(37:)-600(   postorder \(tree\);)]TJ
T*[(38:)-600(   emit_insn \("", "", tree\);)]TJ
T*[(39:)-600(})]TJ
(40:)'
T*[(41:)-600(void emit_push \(astree* tree, const char* opcode\) {)]TJ
T*[(42:)-600(   emit_insn \(opcode, tree->lexinfo->c_str\(\), tree\);)]TJ
T*[(43:)-600(})]TJ
(44:)'
T*[(45:)-600(void emit_assign \(astree* tree\) {)]TJ
T*[(46:)-600(   assert \(tree->children.size\(\) == 2\);)]TJ
T*[(47:)-600(   astree* left = tree->children.at\(0\);)]TJ
T*[(48:)-600(   emit \(tree->children.at\(1\)\);)]TJ
T*[(49:)-600(   if \(left->symbol != IDENT\) {)]TJ
T*[(50:)-600(      errllocprintf \(left->lloc, "%s\\n",)]TJ
T*[(51:)-600(                    "left operand of '=' not an identifier"\);)]TJ
T*[(52:)-600(   }else{)]TJ
T*[(53:)-600(      emit_insn \("popvar", left->lexinfo->c_str\(\), left\);)]TJ
T*[(54:)-600(   })]TJ
T*[(55:)-600(})]TJ
(56:)'
ET
Q
Q
endstream
endobj
80 0 obj
2835
endobj
84 0 obj
<</Length 85 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:35)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(2)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-262.189 -2.7 Td
(emitter.cpp)Tj
-84.3758 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
(57:)Tj
12 TL
T*[(58:)-600(void emit \(astree* tree\) {)]TJ
T*[(59:)-600(   switch \(tree->symbol\) {)]TJ
T*[(60:)-600(      case ROOT  : postorder_emit_stmts \(tree\);       break;)]TJ
T*[(61:)-600(      case ';'   : postorder_emit_semi \(tree\);        break;)]TJ
T*[(62:)-600(      case '='   : emit_assign \(tree\);                break;)]TJ
T*[(63:)-600(      case '+'   : postorder_emit_oper \(tree, "add"\); break;)]TJ
T*[(64:)-600(      case '-'   : postorder_emit_oper \(tree, "sub"\); break;)]TJ
T*[(65:)-600(      case '*'   : postorder_emit_oper \(tree, "mul"\); break;)]TJ
T*[(66:)-600(      case '/'   : postorder_emit_oper \(tree, "div"\); break;)]TJ
T*[(67:)-600(      case '^'   : postorder_emit_oper \(tree, "pow"\); break;)]TJ
T*[(68:)-600(      case POS   : postorder_emit_oper \(tree, "pos"\); break;)]TJ
T*[(69:)-600(      case NEG   : postorder_emit_oper \(tree, "neg"\); break;)]TJ
T*[(70:)-600(      case IDENT : emit_push \(tree, "pushvar"\);       break;)]TJ
T*[(71:)-600(      case NUMBER: emit_push \(tree, "pushnum"\);       break;)]TJ
T*[(72:)-600(      default    : assert \(false\);                    break;)]TJ
T*[(73:)-600(   })]TJ
T*[(74:)-600(})]TJ
(75:)'
T*[(76:)-600(void emit_sm_code \(astree* tree\) {)]TJ
T*[(77:)-600(   printf \("\\n"\);)]TJ
T*[(78:)-600(   if \(tree\) emit \(tree\);)]TJ
T*[(79:)-600(})]TJ
(80:)'
ET
Q
Q
endstream
endobj
85 0 obj
1902
endobj
89 0 obj
<</Length 90 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:41:05)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-253.25 -2.7 Td
(auxlib.h)Tj
-93.3141 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(#ifndef __AUXLIB_H__)]TJ
12 TL
T*[(2:)-600(#define __AUXLIB_H__)]TJ
(3:)'
T*[(4:)-600(#include <string>)]TJ
T*[(5:)-600(using namespace std;)]TJ
(6:)'
T*[(7:)-600(#include <stdarg.h>)]TJ
(8:)'
T*[(9:)-600(//)]TJ
-6.6 -12 Td
[(10:)-600(// DESCRIPTION)]TJ
T*[(11:)-600(//    Auxiliary library containing miscellaneous useful things.)]TJ
T*[(12:)-600(//)]TJ
(13:)'
T*[(14:)-600(//)]TJ
T*[(15:)-600(// Error message and exit status utility.)]TJ
T*[(16:)-600(//)]TJ
(17:)'
T*[(18:)-600(struct exec {)]TJ
T*[(19:)-600(   static string execname;)]TJ
T*[(20:)-600(   static int exit_status;)]TJ
T*[(21:)-600(};)]TJ
(22:)'
T*[(23:)-600(void veprintf \(const char* format, va_list args\);)]TJ
T*[(24:)-600(// Prints a message to stderr using the vector form of )]TJ
T*[(25:)-600(// argument list.)]TJ
(26:)'
T*[(27:)-600(void eprintf \(const char* format, ...\);)]TJ
T*[(28:)-600(// Print a message to stderr according to the printf format)]TJ
T*[(29:)-600(// specified.  Usually called for debug output.)]TJ
T*[(30:)-600(// Precedes the message by the program name if the format)]TJ
T*[(31:)-600(// begins with the characters `%:'.)]TJ
(32:)'
T*[(33:)-600(void errprintf \(const char* format, ...\);)]TJ
T*[(34:)-600(// Print an error message according to the printf format)]TJ
T*[(35:)-600(// specified, using eprintf.)]TJ
T*[(36:)-600(// Sets the exitstatus to EXIT_FAILURE.)]TJ
(37:)'
T*[(38:)-600(void syserrprintf \(const char* object\);)]TJ
T*[(39:)-600(// Print a message resulting from a bad system call.  The)]TJ
T*[(40:)-600(// object is the name of the object causing the problem and)]TJ
T*[(41:)-600(// the reason is taken from the external variable errno.)]TJ
T*[(42:)-600(// Sets the exit status to EXIT_FAILURE.)]TJ
(43:)'
T*[(44:)-600(void eprint_status \(const char* command, int status\);)]TJ
T*[(45:)-600(// Print the status returned by wait\(2\) from a subprocess.)]TJ
(46:)'
ET
Q
Q
endstream
endobj
90 0 obj
2436
endobj
94 0 obj
<</Length 95 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:41:05)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(2)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-253.25 -2.7 Td
(auxlib.h)Tj
-93.3141 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
(47:)Tj
12 TL
T*[(48:)-600(//)]TJ
T*[(49:)-600(// Support for stub messages.)]TJ
T*[(50:)-600(//)]TJ
T*[(51:)-600(#define STUBPRINTF\(...\) \\)]TJ
T*[(52:)-600(        __stubprintf \(__FILE__, __LINE__, __func__, __VA_ARGS__\))]TJ
T*[(53:)-600(void __stubprintf \(const char* file, int line, const char* func,)]TJ
T*[(54:)-600(                   const char* format, ...\);)]TJ
(55:)'
T*[(56:)-600(//)]TJ
T*[(57:)-600(// Debugging utility.)]TJ
T*[(58:)-600(//)]TJ
(59:)'
T*[(60:)-600(void set_debugflags \(const char* flags\);)]TJ
T*[(61:)-600(// Sets a string of debug flags to be used by DEBUGF statements.)]TJ
T*[(62:)-600(// Uses the address of the string, and does not copy it, so)]TJ
T*[(63:)-600(// it must not be dangling.  If a particular debug flag has)]TJ
T*[(64:)-600(// been set, messages are printed.  The format is identical to)]TJ
T*[(65:)-600(// printf format.  The flag "@" turns on all flags.)]TJ
(66:)'
T*[(67:)-600(bool is_debugflag \(char flag\);)]TJ
T*[(68:)-600(// Checks to see if a debugflag is set.)]TJ
(69:)'
T*[(70:)-600(#ifdef NDEBUG)]TJ
T*[(71:)-600(// Do not generate any code.)]TJ
T*[(72:)-600(#define DEBUGF\(FLAG,...\)   /**/)]TJ
T*[(73:)-600(#define DEBUGSTMT\(FLAG,STMTS\) /**/)]TJ
T*[(74:)-600(#else)]TJ
T*[(75:)-600(// Generate debugging code.)]TJ
T*[(76:)-600(void __debugprintf \(char flag, const char* file, int line,)]TJ
T*[(77:)-600(                    const char* func, const char* format, ...\);)]TJ
T*[(78:)-600(#define DEBUGF\(FLAG,...\) \\)]TJ
T*[(79:)-600(        __debugprintf \(FLAG, __FILE__, __LINE__, __func__, \\)]TJ
T*[(80:)-600(                       __VA_ARGS__\))]TJ
T*[(81:)-600(#define DEBUGSTMT\(FLAG,STMTS\) \\)]TJ
T*[(82:)-600(        if \(is_debugflag \(FLAG\)\) { DEBUGF \(FLAG, "\\n"\); STMTS })]TJ
T*[(83:)-600(#endif)]TJ
(84:)'
T*[(85:)-600(#endif)]TJ
(86:)'
ET
Q
Q
endstream
endobj
95 0 obj
2367
endobj
99 0 obj
<</Length 100 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:39:08)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/3)Tj
/R12 14 Tf
-259.858 -2.7 Td
(auxlib.cpp)Tj
-86.7062 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
(1:)Tj
12 TL
T*[(2:)-600(#include <assert.h>)]TJ
T*[(3:)-600(#include <errno.h>)]TJ
T*[(4:)-600(#include <libgen.h>)]TJ
T*[(5:)-600(#include <limits.h>)]TJ
T*[(6:)-600(#include <stdarg.h>)]TJ
T*[(7:)-600(#include <stdio.h>)]TJ
T*[(8:)-600(#include <stdlib.h>)]TJ
T*[(9:)-600(#include <string.h>)]TJ
-6.6 -12 Td
[(10:)-600(#include <wait.h>)]TJ
(11:)'
T*[(12:)-600(#include "auxlib.h")]TJ
(13:)'
T*[(14:)-600(string exec::execname;)]TJ
T*[(15:)-600(int exec::exit_status = EXIT_SUCCESS;)]TJ
(16:)'
T*[(17:)-600(const char* debugflags = "";)]TJ
T*[(18:)-600(bool alldebugflags = false;)]TJ
(19:)'
T*[(20:)-600(static void eprint_signal \(const char* kind, int signal\) {)]TJ
T*[(21:)-600(   eprintf \(", %s %d", kind, signal\);)]TJ
T*[(22:)-600(   const char* sigstr = strsignal \(signal\);)]TJ
T*[(23:)-600(   if \(sigstr != NULL\) fprintf \(stderr, " %s", sigstr\);)]TJ
T*[(24:)-600(})]TJ
(25:)'
T*[(26:)-600(void eprint_status \(const char* command, int status\) {)]TJ
T*[(27:)-600(   if \(status == 0\) return; )]TJ
T*[(28:)-600(   eprintf \("%s: status 0x%04X", command, status\);)]TJ
T*[(29:)-600(   if \(WIFEXITED \(status\)\) {)]TJ
T*[(30:)-600(      eprintf \(", exit %d", WEXITSTATUS \(status\)\);)]TJ
T*[(31:)-600(   })]TJ
T*[(32:)-600(   if \(WIFSIGNALED \(status\)\) {)]TJ
T*[(33:)-600(      eprint_signal \("Terminated", WTERMSIG \(status\)\);)]TJ
T*[(34:)-600(      #ifdef WCOREDUMP)]TJ
T*[(35:)-600(      if \(WCOREDUMP \(status\)\) eprintf \(", core dumped"\);)]TJ
T*[(36:)-600(      #endif)]TJ
T*[(37:)-600(   })]TJ
T*[(38:)-600(   if \(WIFSTOPPED \(status\)\) {)]TJ
T*[(39:)-600(      eprint_signal \("Stopped", WSTOPSIG \(status\)\);)]TJ
T*[(40:)-600(   })]TJ
T*[(41:)-600(   if \(WIFCONTINUED \(status\)\) {)]TJ
T*[(42:)-600(      eprintf \(", Continued"\);)]TJ
T*[(43:)-600(   })]TJ
T*[(44:)-600(   eprintf \("\\n"\);)]TJ
T*[(45:)-600(})]TJ
(46:)'
T*[(47:)-600(void veprintf \(const char* format, va_list args\) {)]TJ
T*[(48:)-600(   assert \(exec::execname.size\(\) != 0\);)]TJ
T*[(49:)-600(   assert \(format != NULL\);)]TJ
T*[(50:)-600(   fflush \(NULL\);)]TJ
T*[(51:)-600(   if \(strstr \(format, "%:"\) == format\) {)]TJ
T*[(52:)-600(      fprintf \(stderr, "%s: ", exec::execname.c_str\(\)\);)]TJ
T*[(53:)-600(      format += 2;)]TJ
T*[(54:)-600(   })]TJ
T*[(55:)-600(   vfprintf \(stderr, format, args\);)]TJ
T*[(56:)-600(   fflush \(NULL\);)]TJ
T*[(57:)-600(})]TJ
(58:)'
ET
Q
Q
endstream
endobj
100 0 obj
2941
endobj
104 0 obj
<</Length 105 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:39:08)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(2)Tj
/R10 18 Tf
16.0129 0 Td
(/3)Tj
/R12 14 Tf
-259.858 -2.7 Td
(auxlib.cpp)Tj
-86.7062 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
[(59:)-600(void eprintf \(const char* format, ...\) {)]TJ
12 TL
T*[(60:)-600(   va_list args;)]TJ
T*[(61:)-600(   va_start \(args, format\);)]TJ
T*[(62:)-600(   veprintf \(format, args\);)]TJ
T*[(63:)-600(   va_end \(args\);)]TJ
T*[(64:)-600(})]TJ
(65:)'
T*[(66:)-600(void errprintf \(const char* format, ...\) {)]TJ
T*[(67:)-600(   va_list args;)]TJ
T*[(68:)-600(   va_start \(args, format\);)]TJ
T*[(69:)-600(   veprintf \(format, args\);)]TJ
T*[(70:)-600(   va_end \(args\);)]TJ
T*[(71:)-600(   exec::exit_status = EXIT_FAILURE;)]TJ
T*[(72:)-600(})]TJ
(73:)'
T*[(74:)-600(void syserrprintf \(const char* object\) {)]TJ
T*[(75:)-600(   errprintf \("%:%s: %s\\n", object, strerror \(errno\)\);)]TJ
T*[(76:)-600(})]TJ
(77:)'
T*[(78:)-600(void __stubprintf \(const char* file, int line, const char* func,)]TJ
T*[(79:)-600(                   const char* format, ...\) {)]TJ
T*[(80:)-600(   va_list args;)]TJ
T*[(81:)-600(   fflush \(NULL\);)]TJ
T*[(82:)-600(   printf \("%s: %s[%d] %s: ", exec::execname.c_str\(\), file, line, func\);)]TJ
T*[(83:)-600(   va_start \(args, format\);)]TJ
T*[(84:)-600(   vprintf \(format, args\);)]TJ
T*[(85:)-600(   va_end \(args\);)]TJ
T*[(86:)-600(   fflush \(NULL\);)]TJ
T*[(87:)-600(}     )]TJ
(88:)'
ET
Q
Q
endstream
endobj
105 0 obj
1777
endobj
109 0 obj
<</Length 110 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:39:08)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(3)Tj
/R10 18 Tf
16.0129 0 Td
(/3)Tj
/R12 14 Tf
-259.858 -2.7 Td
(auxlib.cpp)Tj
-86.7062 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
(89:)Tj
12 TL
T*[(90:)-600(void set_debugflags \(const char* flags\) {)]TJ
T*[(91:)-600(   debugflags = flags;)]TJ
T*[(92:)-600(   if \(strchr \(debugflags, '@'\) != NULL\) alldebugflags = true;)]TJ
T*[(93:)-600(   DEBUGF \('x', "Debugflags = \\"%s\\", all = %d\\n",)]TJ
T*[(94:)-600(           debugflags, alldebugflags\);)]TJ
T*[(95:)-600(})]TJ
(96:)'
T*[(97:)-600(bool is_debugflag \(char flag\) {)]TJ
T*[(98:)-600(   return alldebugflags or strchr \(debugflags, flag\) != NULL;)]TJ
T*[(99:)-600(})]TJ
-6.6 -12 Td
(100:)Tj
T*[(101:)-600(void __debugprintf \(char flag, const char* file, int line,)]TJ
T*[(102:)-600(                    const char* func, const char* format, ...\) {)]TJ
T*[(103:)-600(   va_list args;)]TJ
T*[(104:)-600(   if \(not is_debugflag \(flag\)\) return;)]TJ
T*[(105:)-600(   fflush \(NULL\);)]TJ
T*[(106:)-600(   va_start \(args, format\);)]TJ
T*[(107:)-600(   fprintf \(stderr, "DEBUGF\(%c\): %s[%d] %s\(\):\\n",)]TJ
T*[(108:)-600(             flag, file, line, func\);)]TJ
T*[(109:)-600(   vfprintf \(stderr, format, args\);)]TJ
T*[(110:)-600(   va_end \(args\);)]TJ
T*[(111:)-600(   fflush \(NULL\);)]TJ
T*[(112:)-600(})]TJ
(113:)'
ET
Q
Q
endstream
endobj
110 0 obj
1704
endobj
114 0 obj
<</Length 115 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:35)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-256.358 -2.7 Td
(main.cpp)Tj
-90.2062 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(// $Id: main.cpp,v 1.16 2016-10-06 16:42:35-07 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(#include <string>)]TJ
T*[(4:)-600(#include <vector>)]TJ
T*[(5:)-600(using namespace std;)]TJ
(6:)'
T*[(7:)-600(#include <assert.h>)]TJ
T*[(8:)-600(#include <errno.h>)]TJ
T*[(9:)-600(#include <stdio.h>)]TJ
-6.6 -12 Td
[(10:)-600(#include <stdlib.h>)]TJ
T*[(11:)-600(#include <string.h>)]TJ
T*[(12:)-600(#include <unistd.h>)]TJ
(13:)'
T*[(14:)-600(#include "astree.h")]TJ
T*[(15:)-600(#include "auxlib.h")]TJ
T*[(16:)-600(#include "emitter.h")]TJ
T*[(17:)-600(#include "lyutils.h")]TJ
T*[(18:)-600(#include "string_set.h")]TJ
(19:)'
T*[(20:)-600(const string cpp_name = "/usr/bin/cpp";)]TJ
T*[(21:)-600(string cpp_command;)]TJ
(22:)'
T*[(23:)-600(// Open a pipe from the C preprocessor.)]TJ
T*[(24:)-600(// Exit failure if can't.)]TJ
T*[(25:)-600(// Assigns opened pipe to FILE* yyin.)]TJ
T*[(26:)-600(void cpp_popen \(const char* filename\) {)]TJ
T*[(27:)-600(   cpp_command = cpp_name + " " + filename;)]TJ
T*[(28:)-600(   yyin = popen \(cpp_command.c_str\(\), "r"\);)]TJ
T*[(29:)-600(   if \(yyin == NULL\) {)]TJ
T*[(30:)-600(      syserrprintf \(cpp_command.c_str\(\)\);)]TJ
T*[(31:)-600(      exit \(exec::exit_status\);)]TJ
T*[(32:)-600(   }else {)]TJ
T*[(33:)-600(      if \(yy_flex_debug\) {)]TJ
T*[(34:)-600(         fprintf \(stderr, "-- popen \(%s\), fileno\(yyin\) = %d\\n",)]TJ
T*[(35:)-600(                  cpp_command.c_str\(\), fileno \(yyin\)\);)]TJ
T*[(36:)-600(      })]TJ
T*[(37:)-600(      lexer::newfilename \(cpp_command\);)]TJ
T*[(38:)-600(   })]TJ
T*[(39:)-600(})]TJ
(40:)'
T*[(41:)-600(void cpp_pclose\(\) {)]TJ
T*[(42:)-600(   int pclose_rc = pclose \(yyin\);)]TJ
T*[(43:)-600(   eprint_status \(cpp_command.c_str\(\), pclose_rc\);)]TJ
T*[(44:)-600(   if \(pclose_rc != 0\) exec::exit_status = EXIT_FAILURE;)]TJ
T*[(45:)-600(})]TJ
(46:)'
ET
Q
Q
endstream
endobj
115 0 obj
2395
endobj
119 0 obj
<</Length 120 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:35)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(2)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-256.358 -2.7 Td
(main.cpp)Tj
-90.2062 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
(47:)Tj
12 TL
T*[(48:)-600(void scan_opts \(int argc, char** argv\) {)]TJ
T*[(49:)-600(   opterr = 0;)]TJ
T*[(50:)-600(   yy_flex_debug = 0;)]TJ
T*[(51:)-600(   yydebug = 0;)]TJ
T*[(52:)-600(   lexer::interactive = isatty \(fileno \(stdin\)\))]TJ
T*[(53:)-600(                    and isatty \(fileno \(stdout\)\);)]TJ
T*[(54:)-600(   for\(;;\) {)]TJ
T*[(55:)-600(      int opt = getopt \(argc, argv, "ly"\);)]TJ
T*[(56:)-600(      if \(opt == EOF\) break;)]TJ
T*[(57:)-600(      switch \(opt\) {)]TJ
T*[(58:)-600(         case 'l': yy_flex_debug = 1;         break;)]TJ
T*[(59:)-600(         case 'y': yydebug = 1;               break;)]TJ
T*[(60:)-600(         default:  errprintf \("bad option \(%c\)\\n", optopt\); break;)]TJ
T*[(61:)-600(      })]TJ
T*[(62:)-600(   })]TJ
T*[(63:)-600(   if \(optind > argc\) {)]TJ
T*[(64:)-600(      errprintf \("Usage: %s [-ly] [filename]\\n",)]TJ
T*[(65:)-600(                 exec::execname.c_str\(\)\);)]TJ
T*[(66:)-600(      exit \(exec::exit_status\);)]TJ
T*[(67:)-600(   })]TJ
T*[(68:)-600(   const char* filename = optind == argc ? "-" : argv[optind];)]TJ
T*[(69:)-600(   cpp_popen \(filename\);)]TJ
T*[(70:)-600(})]TJ
(71:)'
T*[(72:)-600(int main \(int argc, char** argv\) {)]TJ
T*[(73:)-600(   exec::execname = basename \(argv[0]\);)]TJ
T*[(74:)-600(   if \(yydebug or yy_flex_debug\) {)]TJ
T*[(75:)-600(      fprintf \(stderr, "Command:"\);)]TJ
T*[(76:)-600(      for \(char** arg = &argv[0]; arg < &argv[argc]; ++arg\) {)]TJ
T*[(77:)-600(            fprintf \(stderr, " %s", *arg\);)]TJ
T*[(78:)-600(      })]TJ
T*[(79:)-600(      fprintf \(stderr, "\\n"\);)]TJ
T*[(80:)-600(   })]TJ
T*[(81:)-600(   scan_opts \(argc, argv\);)]TJ
T*[(82:)-600(   int parse_rc = yyparse\(\);)]TJ
T*[(83:)-600(   cpp_pclose\(\);)]TJ
T*[(84:)-600(   yylex_destroy\(\);)]TJ
T*[(85:)-600(   if \(yydebug or yy_flex_debug\) {)]TJ
T*[(86:)-600(      fprintf \(stderr, "Dumping parser::root:\\n"\);)]TJ
T*[(87:)-600(      if \(parser::root != nullptr\) parser::root->dump_tree \(stderr\);)]TJ
T*[(88:)-600(      fprintf \(stderr, "Dumping string_set:\\n"\);)]TJ
T*[(89:)-600(      string_set::dump \(stderr\);)]TJ
T*[(90:)-600(   })]TJ
T*[(91:)-600(   if \(parse_rc\) {)]TJ
T*[(92:)-600(      errprintf \("parse failed \(%d\)\\n", parse_rc\);)]TJ
T*[(93:)-600(   }else {)]TJ
T*[(94:)-600(      astree::print \(stdout, parser::root\);)]TJ
T*[(95:)-600(      emit_sm_code \(parser::root\);)]TJ
T*[(96:)-600(      delete parser::root;)]TJ
T*[(97:)-600(   })]TJ
T*[(98:)-600(   return exec::exit_status;)]TJ
T*[(99:)-600(})]TJ
-6.6 -12 Td
(100:)Tj
ET
Q
Q
endstream
endobj
120 0 obj
3109
endobj
124 0 obj
<</Length 125 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:35)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-255.77 -2.7 Td
(Makefile)Tj
-90.7949 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(# $Id: Makefile,v 1.22 2016-10-06 16:42:35-07 - - $)]TJ
12 TL
(2:)'
T*[(3:)-600(DEPSFILE  = Makefile.deps)]TJ
T*[(4:)-600(NOINCLUDE = ci clean spotless)]TJ
T*[(5:)-600(NEEDINCL  = ${filter ${NOINCLUDE}, ${MAKECMDGOALS}})]TJ
T*[(6:)-600(CPP       = g++ -g -O0 -Wall -Wextra -std=gnu++14)]TJ
T*[(7:)-600(MKDEPS    = g++ -MM -std=gnu++14)]TJ
T*[(8:)-600(GRIND     = valgrind --leak-check=full --show-reachable=yes)]TJ
T*[(9:)-600(FLEX      = flex --outfile=${LEXCPP})]TJ
-6.6 -12 Td
[(10:)-600(BISON     = bison --defines=${PARSEHDR} --output=${PARSECPP})]TJ
(11:)'
T*[(12:)-600(MODULES   = astree lyutils string_set emitter auxlib)]TJ
T*[(13:)-600(HDRSRC    = ${MODULES:=.h})]TJ
T*[(14:)-600(CPPSRC    = ${MODULES:=.cpp} main.cpp)]TJ
T*[(15:)-600(FLEXSRC   = lexer.l)]TJ
T*[(16:)-600(BISONSRC  = parser.y)]TJ
T*[(17:)-600(PARSEHDR  = yyparse.h)]TJ
T*[(18:)-600(LEXCPP    = yylex.cpp)]TJ
T*[(19:)-600(PARSECPP  = yyparse.cpp)]TJ
T*[(20:)-600(CGENS     = ${LEXCPP} ${PARSECPP})]TJ
T*[(21:)-600(ALLGENS   = ${PARSEHDR} ${CGENS})]TJ
T*[(22:)-600(EXECBIN   = zexprsm)]TJ
T*[(23:)-600(ALLCSRC   = ${CPPSRC} ${CGENS})]TJ
T*[(24:)-600(OBJECTS   = ${ALLCSRC:.cpp=.o})]TJ
T*[(25:)-600(LEXOUT    = yylex.output)]TJ
T*[(26:)-600(PARSEOUT  = yyparse.output)]TJ
T*[(27:)-600(REPORTS   = ${LEXOUT} ${PARSEOUT})]TJ
T*[(28:)-600(MODSRC    = ${foreach MOD, ${MODULES}, ${MOD}.h ${MOD}.cpp})]TJ
T*[(29:)-600(MISCSRC   = ${filter-out ${MODSRC}, ${HDRSRC} ${CPPSRC}})]TJ
T*[(30:)-600(ALLSRC    = README ${FLEXSRC} ${BISONSRC} ${MODSRC} ${MISCSRC} Makefile)]TJ
T*[(31:)-600(TESTINS   = ${wildcard test*.in})]TJ
T*[(32:)-600(EXECTEST  = ${EXECBIN} -ly)]TJ
T*[(33:)-600(LISTSRC   = ${ALLSRC} ${DEPSFILE} ${PARSEHDR})]TJ
(34:)'
T*[(35:)-600(all : ${EXECBIN})]TJ
(36:)'
T*[(37:)-600(${EXECBIN} : ${OBJECTS})]TJ
T*[(38:)-600(        ${CPP} -o${EXECBIN} ${OBJECTS})]TJ
(39:)'
T*[(40:)-600(yylex.o : yylex.cpp)]TJ
T*[(41:)-600(        # Suppress warning message from flex compilation.)]TJ
T*[(42:)-600(        ${CPP} -Wno-sign-compare -c $<)]TJ
(43:)'
T*[(44:)-600(%.o : %.cpp)]TJ
T*[(45:)-600(        ${CPP} -c $<)]TJ
(46:)'
T*[(47:)-600(${LEXCPP} : ${FLEXSRC})]TJ
T*[(48:)-600(        ${FLEX} ${FLEXSRC})]TJ
(49:)'
T*[(50:)-600(${PARSECPP} ${PARSEHDR} : ${BISONSRC})]TJ
T*[(51:)-600(        ${BISON} ${BISONSRC})]TJ
(52:)'
ET
Q
Q
endstream
endobj
125 0 obj
2843
endobj
129 0 obj
<</Length 130 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:35)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(2)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-255.77 -2.7 Td
(Makefile)Tj
-90.7949 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
(53:)Tj
12 TL
T*[(54:)-600(ci : ${ALLSRC} ${TESTINS})]TJ
T*[(55:)-600(        - checksource ${ALLSRC})]TJ
T*[(56:)-600(        - cpplint.py.perl ${CPPSRC})]TJ
T*[(57:)-600(        cid + ${ALLSRC} ${TESTINS} test?.inh)]TJ
(58:)'
T*[(59:)-600(lis : ${LISTSRC} tests)]TJ
T*[(60:)-600(        mkpspdf List.source.ps ${LISTSRC})]TJ
T*[(61:)-600(        mkpspdf List.output.ps ${REPORTS} \\)]TJ
T*[(62:)-600(                ${foreach test, ${TESTINS:.in=}, \\)]TJ
T*[(63:)-600(                ${patsubst %, ${test}.%, in out err log}})]TJ
(64:)'
T*[(65:)-600(clean :)]TJ
T*[(66:)-600(        - rm ${OBJECTS} ${ALLGENS} ${REPORTS} ${DEPSFILE} core)]TJ
T*[(67:)-600(        - rm ${foreach test, ${TESTINS:.in=}, \\)]TJ
T*[(68:)-600(                ${patsubst %, ${test}.%, out err log}})]TJ
(69:)'
T*[(70:)-600(spotless : clean)]TJ
T*[(71:)-600(        - rm ${EXECBIN} List.*.ps List.*.pdf)]TJ
(72:)'
T*[(73:)-600(deps : ${ALLCSRC})]TJ
T*[(74:)-600(        @ echo "# ${DEPSFILE} created `date` by ${MAKE}" >${DEPSFILE})]TJ
T*[(75:)-600(        ${MKDEPS} ${ALLCSRC} >>${DEPSFILE})]TJ
(76:)'
T*[(77:)-600(${DEPSFILE} :)]TJ
T*[(78:)-600(        @ touch ${DEPSFILE})]TJ
T*[(79:)-600(        ${MAKE} --no-print-directory deps)]TJ
(80:)'
T*[(81:)-600(tests : ${EXECBIN})]TJ
T*[(82:)-600(        touch ${TESTINS})]TJ
T*[(83:)-600(        make --no-print-directory ${TESTINS:.in=.out})]TJ
(84:)'
T*[(85:)-600(%.out %.err : %.in)]TJ
T*[(86:)-600(        ${GRIND} --log-file=$*.log ${EXECTEST} $< 1>$*.out 2>$*.err; \\)]TJ
T*[(87:)-600(        echo EXIT STATUS = $$? >>$*.log)]TJ
(88:)'
T*[(89:)-600(again :)]TJ
T*[(90:)-600(        gmake --no-print-directory spotless deps ci all lis)]TJ
T*[(91:)-600(        )]TJ
T*[(92:)-600(ifeq "${NEEDINCL}" "")]TJ
T*[(93:)-600(include ${DEPSFILE})]TJ
T*[(94:)-600(endif)]TJ
(95:)'
ET
Q
Q
endstream
endobj
130 0 obj
2342
endobj
134 0 obj
<</Length 135 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:33)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/1)Tj
/R12 14 Tf
-270.35 -2.7 Td
(Makefile.deps)Tj
-76.2141 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(# Makefile.deps created Thu Oct  6 16:42:33 PDT 2016 by gmake)]TJ
12 TL
T*[(2:)-600(astree.o: astree.cpp astree.h auxlib.h string_set.h lyutils.h yyparse.h)]TJ
T*[(3:)-600(lyutils.o: lyutils.cpp auxlib.h lyutils.h astree.h yyparse.h)]TJ
T*[(4:)-600(string_set.o: string_set.cpp string_set.h)]TJ
T*[(5:)-600(emitter.o: emitter.cpp astree.h auxlib.h emitter.h lyutils.h yyparse.h)]TJ
T*[(6:)-600(auxlib.o: auxlib.cpp auxlib.h)]TJ
T*[(7:)-600(main.o: main.cpp astree.h auxlib.h emitter.h lyutils.h yyparse.h \\)]TJ
T*[(8:)-600( string_set.h)]TJ
T*[(9:)-600(yylex.o: yylex.cpp lyutils.h astree.h auxlib.h yyparse.h)]TJ
-6.6 -12 Td
[(10:)-600(yyparse.o: yyparse.cpp astree.h auxlib.h lyutils.h yyparse.h)]TJ
ET
Q
Q
endstream
endobj
135 0 obj
1257
endobj
139 0 obj
<</Length 140 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:33)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(1)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-257.52 -2.7 Td
(yyparse.h)Tj
-89.0445 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 70.4 718 Tm
[(1:)-600(/* A Bison parser, made by GNU Bison 2.7.  */)]TJ
12 TL
(2:)'
T*[(3:)-600(/* Bison interface for Yacc-like parsers in C)]TJ
T*[(4:)-600(   )]TJ
T*[(5:)-600(      Copyright \(C\) 1984, 1989-1990, 2000-2012 Free Software Foundation,)]TJ
-27.4 -12 Td
( Inc.)Tj
27.4 -12 Td
[(6:)-600(   )]TJ
T*[(7:)-600(   This program is free software: you can redistribute it and/or modify)]TJ
T*[(8:)-600(   it under the terms of the GNU General Public License as published by)]TJ
T*[(9:)-600(   the Free Software Foundation, either version 3 of the License, or)]TJ
-6.6 -12 Td
[(10:)-600(   \(at your option\) any later version.)]TJ
T*[(11:)-600(   )]TJ
T*[(12:)-600(   This program is distributed in the hope that it will be useful,)]TJ
T*[(13:)-600(   but WITHOUT ANY WARRANTY; without even the implied warranty of)]TJ
T*[(14:)-600(   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the)]TJ
T*[(15:)-600(   GNU General Public License for more details.)]TJ
T*[(16:)-600(   )]TJ
T*[(17:)-600(   You should have received a copy of the GNU General Public License)]TJ
T*[(18:)-600(   along with this program.  If not, see <http://www.gnu.org/licenses/>.)]TJ
-20.8 -12 Td
(  */)Tj
20.8 -12 Td
(19:)Tj
T*[(20:)-600(/* As a special exception, you may create a larger work that contains)]TJ
T*[(21:)-600(   part or all of the Bison parser skeleton and distribute that work)]TJ
T*[(22:)-600(   under terms of your choice, so long as that work isn't itself a)]TJ
T*[(23:)-600(   parser generator using the skeleton or a modified version thereof)]TJ
T*[(24:)-600(   as a parser skeleton.  Alternatively, if you modify or redistribute)]TJ
T*[(25:)-600(   the parser skeleton itself, you may \(at your option\) remove this)]TJ
T*[(26:)-600(   special exception, which will cause the skeleton and the resulting)]TJ
T*[(27:)-600(   Bison output files to be licensed under the GNU General Public)]TJ
T*[(28:)-600(   License without this special exception.)]TJ
T*[(29:)-600(   )]TJ
T*[(30:)-600(   This special exception was added by the Free Software Foundation in)]TJ
T*[(31:)-600(   version 2.2 of Bison.  */)]TJ
(32:)'
T*[(33:)-600(#ifndef YY_YY_YYPARSE_H_INCLUDED)]TJ
T*[(34:)-600(# define YY_YY_YYPARSE_H_INCLUDED)]TJ
T*[(35:)-600(/* Enabling traces.  */)]TJ
T*[(36:)-600(#ifndef YYDEBUG)]TJ
T*[(37:)-600(# define YYDEBUG 1)]TJ
T*[(38:)-600(#endif)]TJ
T*[(39:)-600(#if YYDEBUG)]TJ
T*[(40:)-600(extern int yydebug;)]TJ
T*[(41:)-600(#endif)]TJ
(42:)'
T*[(43:)-600(/* Tokens.  */)]TJ
T*[(44:)-600(#ifndef YYTOKENTYPE)]TJ
T*[(45:)-600(# define YYTOKENTYPE)]TJ
T*[(46:)-600(   /* Put the tokens into the symbol table, so that GDB and other debugg)]TJ
-20.8 -12 Td
(ers)Tj
20.8 -12 Td
[(47:)-600(      know about them.  */)]TJ
T*[(48:)-600(   enum yytokentype {)]TJ
T*[(49:)-600(     ROOT = 258,)]TJ
T*[(50:)-600(     IDENT = 259,)]TJ
T*[(51:)-600(     NUMBER = 260,)]TJ
T*[(52:)-600(     NEG = 261,)]TJ
T*[(53:)-600(     POS = 262)]TJ
T*[(54:)-600(   };)]TJ
T*[(55:)-600(#endif)]TJ
ET
Q
Q
endstream
endobj
140 0 obj
3511
endobj
144 0 obj
<</Length 145 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
/R7 gs
0 G
380 240 5360 7080 re
S
5 w
0 0 0 RG
380 7320 m
5700 7320 l
380 7320 m
1100 7320 l
1100 7680 l
380 7680 l
h
S
0 0 0 rg
q
10 0 0 10 0 0 cm BT
/R8 12 Tf
1 0 0 1 52.6641 752 Tm
(10/06/16)Tj
-0.659766 -12.8 Td
(16:42:33)Tj
ET
Q
4980 7320 720 360 re
S
q
10 0 0 10 0 0 cm BT
/R10 28.8 Tf
1 0 0 1 518.488 739.2 Tm
(2)Tj
/R10 18 Tf
16.0129 0 Td
(/2)Tj
/R12 14 Tf
-257.52 -2.7 Td
(yyparse.h)Tj
-89.0445 18 Td
($cmps104a-wm/Examples/e08.expr-smc/)Tj
ET
Q
0 g
q
10 0 0 10 0 0 cm BT
/R14 11 Tf
1 0 0 1 63.8 718 Tm
(56:)Tj
12 TL
(57:)'
T*[(58:)-600(#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED)]TJ
T*[(59:)-600(typedef int YYSTYPE;)]TJ
T*[(60:)-600(# define YYSTYPE_IS_TRIVIAL 1)]TJ
T*[(61:)-600(# define yystype YYSTYPE /* obsolescent; will be withdrawn */)]TJ
T*[(62:)-600(# define YYSTYPE_IS_DECLARED 1)]TJ
T*[(63:)-600(#endif)]TJ
(64:)'
T*[(65:)-600(extern YYSTYPE yylval;)]TJ
(66:)'
T*[(67:)-600(#ifdef YYPARSE_PARAM)]TJ
T*[(68:)-600(#if defined __STDC__ || defined __cplusplus)]TJ
T*[(69:)-600(int yyparse \(void *YYPARSE_PARAM\);)]TJ
T*[(70:)-600(#else)]TJ
T*[(71:)-600(int yyparse \(\);)]TJ
T*[(72:)-600(#endif)]TJ
T*[(73:)-600(#else /* ! YYPARSE_PARAM */)]TJ
T*[(74:)-600(#if defined __STDC__ || defined __cplusplus)]TJ
T*[(75:)-600(int yyparse \(void\);)]TJ
T*[(76:)-600(#else)]TJ
T*[(77:)-600(int yyparse \(\);)]TJ
T*[(78:)-600(#endif)]TJ
T*[(79:)-600(#endif /* ! YYPARSE_PARAM */)]TJ
(80:)'
T*[(81:)-600(#endif /* !YY_YY_YYPARSE_H_INCLUDED  */)]TJ
ET
Q
Q
endstream
endobj
145 0 obj
1495
endobj
4 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 16 0 R
/Font 17 0 R
>>
/Contents 5 0 R
>>
endobj
18 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 21 0 R
/Font 22 0 R
>>
/Contents 19 0 R
>>
endobj
23 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 26 0 R
/Font 27 0 R
>>
/Contents 24 0 R
>>
endobj
28 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 31 0 R
/Font 32 0 R
>>
/Contents 29 0 R
>>
endobj
33 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 36 0 R
/Font 37 0 R
>>
/Contents 34 0 R
>>
endobj
38 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 41 0 R
/Font 42 0 R
>>
/Contents 39 0 R
>>
endobj
43 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 46 0 R
/Font 47 0 R
>>
/Contents 44 0 R
>>
endobj
48 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 51 0 R
/Font 52 0 R
>>
/Contents 49 0 R
>>
endobj
53 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 56 0 R
/Font 57 0 R
>>
/Contents 54 0 R
>>
endobj
58 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 61 0 R
/Font 62 0 R
>>
/Contents 59 0 R
>>
endobj
63 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 66 0 R
/Font 67 0 R
>>
/Contents 64 0 R
>>
endobj
68 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 71 0 R
/Font 72 0 R
>>
/Contents 69 0 R
>>
endobj
73 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 76 0 R
/Font 77 0 R
>>
/Contents 74 0 R
>>
endobj
78 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 81 0 R
/Font 82 0 R
>>
/Contents 79 0 R
>>
endobj
83 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 86 0 R
/Font 87 0 R
>>
/Contents 84 0 R
>>
endobj
88 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 91 0 R
/Font 92 0 R
>>
/Contents 89 0 R
>>
endobj
93 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 96 0 R
/Font 97 0 R
>>
/Contents 94 0 R
>>
endobj
98 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 101 0 R
/Font 102 0 R
>>
/Contents 99 0 R
>>
endobj
103 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 106 0 R
/Font 107 0 R
>>
/Contents 104 0 R
>>
endobj
108 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 111 0 R
/Font 112 0 R
>>
/Contents 109 0 R
>>
endobj
113 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 116 0 R
/Font 117 0 R
>>
/Contents 114 0 R
>>
endobj
118 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 121 0 R
/Font 122 0 R
>>
/Contents 119 0 R
>>
endobj
123 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 126 0 R
/Font 127 0 R
>>
/Contents 124 0 R
>>
endobj
128 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 131 0 R
/Font 132 0 R
>>
/Contents 129 0 R
>>
endobj
133 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 136 0 R
/Font 137 0 R
>>
/Contents 134 0 R
>>
endobj
138 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 141 0 R
/Font 142 0 R
>>
/Contents 139 0 R
>>
endobj
143 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/ExtGState 146 0 R
/Font 147 0 R
>>
/Contents 144 0 R
>>
endobj
3 0 obj
<< /Type /Pages /Kids [
4 0 R
18 0 R
23 0 R
28 0 R
33 0 R
38 0 R
43 0 R
48 0 R
53 0 R
58 0 R
63 0 R
68 0 R
73 0 R
78 0 R
83 0 R
88 0 R
93 0 R
98 0 R
103 0 R
108 0 R
113 0 R
118 0 R
123 0 R
128 0 R
133 0 R
138 0 R
143 0 R
] /Count 27
>>
endobj
1 0 obj
<</Type /Catalog /Pages 3 0 R
/Metadata 153 0 R
>>
endobj
7 0 obj
<</Type/ExtGState
/OPM 1>>endobj
16 0 obj
<</R7
7 0 R>>
endobj
17 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
21 0 obj
<</R7
7 0 R>>
endobj
22 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
26 0 obj
<</R7
7 0 R>>
endobj
27 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
31 0 obj
<</R7
7 0 R>>
endobj
32 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
36 0 obj
<</R7
7 0 R>>
endobj
37 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
41 0 obj
<</R7
7 0 R>>
endobj
42 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
46 0 obj
<</R7
7 0 R>>
endobj
47 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
51 0 obj
<</R7
7 0 R>>
endobj
52 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
56 0 obj
<</R7
7 0 R>>
endobj
57 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
61 0 obj
<</R7
7 0 R>>
endobj
62 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
66 0 obj
<</R7
7 0 R>>
endobj
67 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
71 0 obj
<</R7
7 0 R>>
endobj
72 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
76 0 obj
<</R7
7 0 R>>
endobj
77 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
81 0 obj
<</R7
7 0 R>>
endobj
82 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
86 0 obj
<</R7
7 0 R>>
endobj
87 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
91 0 obj
<</R7
7 0 R>>
endobj
92 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
96 0 obj
<</R7
7 0 R>>
endobj
97 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
101 0 obj
<</R7
7 0 R>>
endobj
102 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
106 0 obj
<</R7
7 0 R>>
endobj
107 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
111 0 obj
<</R7
7 0 R>>
endobj
112 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
116 0 obj
<</R7
7 0 R>>
endobj
117 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
121 0 obj
<</R7
7 0 R>>
endobj
122 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
126 0 obj
<</R7
7 0 R>>
endobj
127 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
131 0 obj
<</R7
7 0 R>>
endobj
132 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
136 0 obj
<</R7
7 0 R>>
endobj
137 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
141 0 obj
<</R7
7 0 R>>
endobj
142 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
146 0 obj
<</R7
7 0 R>>
endobj
147 0 obj
<</R14
14 0 R/R8
8 0 R/R12
12 0 R/R10
10 0 R>>
endobj
14 0 obj
<</BaseFont/IWQXDC+Courier-Bold/FontDescriptor 15 0 R/Type/Font
/FirstChar 32/LastChar 126/Widths[
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600
600 0 600 600 600 600 600 600 600 600 600 600 600 600 600 600
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600]
/Encoding 152 0 R/Subtype/Type1>>
endobj
152 0 obj
<</Type/Encoding/BaseEncoding/WinAnsiEncoding/Differences[
39/quoteright
96/quoteleft
126/tilde]>>
endobj
8 0 obj
<</BaseFont/WDIHGY+Times-Bold/FontDescriptor 9 0 R/Type/Font
/FirstChar 47/LastChar 58/Widths[ 278
500 500 500 500 500 500 500 0 500 500 333]
/Encoding/WinAnsiEncoding/Subtype/Type1>>
endobj
12 0 obj
<</BaseFont/XCGWVB+Times-Roman/FontDescriptor 13 0 R/Type/Font
/FirstChar 36/LastChar 121/Widths[ 500 0 0 0 0 0 0 0 0 333 250 278
500 500 0 0 500 0 0 0 500 0 0 0 0 0 0 0
0 722 0 0 722 611 0 0 0 0 0 0 0 889 0 0
0 0 667 0 0 0 0 0 0 0 0 0 0 0 0 500
0 444 500 444 500 444 333 500 500 278 0 500 278 778 500 0
500 0 333 389 278 500 0 722 500 500]
/Encoding/WinAnsiEncoding/Subtype/Type1>>
endobj
10 0 obj
<</BaseFont/CFATFR+Helvetica-Bold/FontDescriptor 11 0 R/Type/Font
/FirstChar 47/LastChar 51/Widths[ 278
0 556 556 556]
/Encoding/WinAnsiEncoding/Subtype/Type1>>
endobj
15 0 obj
<</Type/FontDescriptor/FontName/IWQXDC+Courier-Bold/FontBBox[-21 -205 623 695]/Flags 7
/Ascent 695
/CapHeight 597
/Descent -205
/ItalicAngle 0
/StemV 150
/AvgWidth 600
/MaxWidth 600
/MissingWidth 600
/XHeight 451
/CharSet(/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/R/S/T/U/V/W/X/Y/Z/a/ampersand/asciicircum/asterisk/at/b/backslash/bar/braceleft/braceright/bracketleft/bracketright/c/colon/comma/d/dollar/e/eight/equal/exclam/f/five/four/g/greater/h/hyphen/i/j/k/l/less/m/n/nine/numbersign/o/one/p/parenleft/parenright/percent/period/plus/q/question/quotedbl/quoteleft/quoteright/r/s/semicolon/seven/six/slash/space/t/three/tilde/two/u/underscore/v/w/x/y/z/zero)/FontFile3 148 0 R>>
endobj
148 0 obj
<</Filter[/ASCII85Decode
/FlateDecode]
/Subtype/Type1C/Length 10580>>stream
Gatm^$!7kmrq8b$A886T`j)1R!a<#">OAiLem5=#mL(-e,!sr!^*S?35WF9Z&jf,3ll_4Zi.?hi
f=J>sf!a/`hVQu;DV*Opp5In&p]$dU#`CtJp\CEL&QpkFBDF.JmsT[u3/$T/K#?P0[nIb`,79<r
^/Q)dO8WH51R>qk1k^/-,ln03EI"jUq_I,11@i!B@2puF"UoH(Iqd2[O\F.1n;@lTniYmJi?VtP
Q\hK#@mn-VE?;<$h6_V$e>^oC5+2Ah)fKuf9m0k5=<8/,$BFbGLjqu%$5Z3$"@^>Dl*1ZS*?Hg?
oEYq&NXCX9#hZU>BHR-([Xdk?0TVKnE)BT!35OY*AWo:>baLD93rV%`>84>$51X573)],%jhYi.
cR/i]lrk%4A#\*n=d8CGkS5g&@opX_'>HS:9k(olUqL*VJa65-GmCJ/^EGRIPA#%$QE[LMgEO)p
SE<%af8SNApWSfEQHkW;I;Rj,*rk`"5OOO$$XS+"_SV.J9hKj2eO>Z<:[soH&EAT>`#HX>@KWlc
G_Od@]Lbd>2A$UZc,:l:$h5^OQ'b6],Gl%,M5eE'@OX$kn0+)0dg9Aj3AH0U,?>@3M3Z"1@MLVe
G_]BqbU(gOY7YQ,H%["(3jF_?#N8D$-f-&=,Mjc%'8qYY`+%_O@L;Q+Z'-"rp_/$a(GUf?M:'8"
"G^q@L(Nd+$SdBT-,pR&i['1%?7'oMJ=q]T6:a4+GS!4K:Z>Md+Yer.NC*^'Ga,OYa=BX']C9'c
\SgQ@E;+A@OZHf&78^OcaV_U4kRZ!g2/M0SIm"T(S/e+b@d<P0T"k1ifF)YoPs:i>a/E"5rh,8C
YG7GCrq"*F\!PpbF17/AN;7edVQo$k<:TORQQ$)-&H")D$L<Dt4iVaAH/s</H^s\PkW.'If(8KQ
$cYcX4WM4^r.A(`?F_e!jb2.tZkI=OoU`"Qpn(.XoBQ7q9.!</%%jhHlH#q0VRB0>T,'QVf^sI<
<AQaL=D%Id1QM9B3:dN^?*_;cej^U6Gn&&m.lMG.aCq6l;JN""AI:s/&tQC#WE1#p.ffg-A/Qf<
dH),/obLp9AlWiN?D1<[L]R'V'&?AD)<H*DTp0X^X"^I]g1ilY,LO_1ILK'4bO1CqWR14#ir\H$
Io(cl5a;udW&V*B&f:DsBJc3k$b(*."^Bqe[SZ;2T564*p*0M>gs3!uVirU'"`eHjAkFh7!b(1>
8$XP=d-tLp8ukYSg58iW0e*W<>B+f2C=&HBRT0IAOSh1Q:,Z5.a'Pm-o+e!b]RB=l@<f=1K\uK+
/_(D>Z;1JPnA+.]UO`Y;/,'hH!aC1GlK:sr(X'0h3=GpMBK-rW+3H2h!VPlrX=ff!-_!iM"%f@^
SZ5X\J/#p@;JTi"&BAW+jOBUi7A/GLB5M*Cbp([\$`#e,)GugUU4m[83]FDGq/Z5M-\^<70%=YV
gN;[qgk1G0U7>TL0XjPc=GSji)+:trSFG$Voa)p1g%HH=i&D\J[#P"2##fB.Yf2+ld7-dN=M#f)
$sTOWWD/cqGfEZ-*.%AUcdtSPbF4-4k'0g=A,DXck'r&o!gMU8S4oo$5,Zc.$aiub.OK#RPD5[U
STjI?CnSO]pbF#PU3%<6K4B0s6%ca@9(@D7Q<9kk`rq<`<seB],W8b>iuGJCRl2(-J_<Mf<tTX#
E^QTFq$L[4Oh\`[O@J;@j=/<A7"99!_ihth2pRhto$XG.h7WNrd(Vpqd)ppMG_k7MQA5")P++f[
b,DEBoaY%P$^@`nAs+m^G9'a1WDQ>Z04@qq<*a/g"r2;_V.!HYDkDZ7ZH#sE=@I8"!5=#K>Voju
05?"W/$aLQ"act'\)>'Nl%#>>L;_9#fpJ0cO`b1Zp;JRp1NS94hlPZIU>%jIbs4YDE:fT<2%NE6
cQa8$p;\8@1`R;g<L-[<$E>GU+t>H%>qQp]M#i]R@\eRT?%>8ZhS*D3?K_:dadle.R[);>6(PrU
RMU;n2FjlJku9!(&MSiHSY;uIT2Q#qW.4A'<L-CTVtdTUPnJN9fG'FE8PNg7"U3O$cN_oXc6kO&
JM"J*IJRd<EQMc-4F[/KNe$cs?]`=>!(h^En-#J13$*AY'\gIf`!^Xa\"mr,Yud1pPs&=/;R.8Z
H_mq"DC%_H1nZaiE&-HD[t."[F^eWCl$a19X]XaBDm"<)XbP8i\hZRZ[8DDf35V0DgGhFPTEMIK
haZWK)U85WEuK@o#@_^QGtN_=XL.V9?OpnMO5MK/3oA'B:1AV0@NMJn.a[CE`@6,G6m,JYdaSW+
*5k[sGhj$@A(91:5-`L$EQMY_C_8_a]ncLi>cB]2[f'1e<H+Egab-p^.sqh$'VH#CGEbp4jiL!q
[SB$2nDOr83H/)@0VhHSh@4X+r]ID02+/E**Yt3Q*qXSCUCEg"\M24Hd2T>R'j=VH[0pL^SHlE4
Y;hh%hIa%p'_[+Am]2/t7J\&70RMbc4iU8dUX=nTAjPD;'B[lP68SkSd,2S#ZTKcf3&4eWP9a$/
J,g]I`0<`W-T-NGcrf",='f1dBP?`&#9<cJ)fFNL+jRl?0SB@.9nM";AY)dQ[:"Iu48iRfeJ.*8
J0*c`kqd(<9;4+p@NVCT+"2-WWF*]%P3Ts&%kF5lVBJG7C+2-=F"=G$_<V<%:4>.Oooq9\eFA$$
_Vd6`<,)$iH:>*W&HHR"$r=#-@VS!Q4$iosCiaG<mm-nEGXFDu4g%n#/=?R&1,Z-h]#W>_SAB^D
&5m?2>DDOQ9A]oX*J6]^'#I3cJ(EdI*Nj2qCBB7_i`(:[h#s[FMMg+#[5#KA%'L-sL&bQlPk*u5
hF?[9U[)n@3"6pq,KC"T=VTZr2qSdo20]iGH@sYVB@c!5HdLLVY2@(%5HO-_E;]4TcER>ohuhJp
0[fgI`k18M'%pP$*l&pQ$k@8cVSa@[1#A_EecKHS_2+Gn###E.?"sh4.b.*?_7l)G3aWX)kA>Nd
iT3>g+Vh_l.Eerob>^ncO@mK/93f(dTVsnLTKFVW7H4P[n&eUikR-E3K$kbrX%GVhd,c&.>Ed>\
0&i_U5@4>p4o3h!8n!B!Y]-jUX^72CbEM!;oKZ3;S?eYFg8I]H("`O-gHEEFW#std4UL#>CNUs3
W,hG38"M<MeOT:Sc#<fED'^'aZ;9Qe]RWe_W%P_dFp)'EY4Fo6[A1"3^A`f]!k8\#iXI'BDufIZ
3b8i!lO;GM3"J49JP(mc#.<9`8O/tAM[_*+/_g]i!,H&PD;VcRHjNnC/a%["<NFjISG)b>o&&AH
E45PrPE`uSq)12:QVeA#:al7%L9$l$d`Y^4#NnCRmupPbVD8T"<<8hn\KSWbOl$=@LJSi`qQ4Ur
4F>[XEE[>6@OqSG<,FrjP[(=jV?h@aq8p*s+<W:-/(,,Foq9OF_I0_[``P6g1PXW9YgCb<;p+DB
B*p#%H>W^Tg-l'"%%h@[/M.!GIDTo3J+);fVIqD^0cGg6iOE@&'&WgHd$RTl**J`cQq;GkmI[fi
+n,hsraplXqBpugCbDO;0W!a\BsJ+Fi..?sRAG*GFq)!192)>rT[o#O:((JnY0DA2<>B^3V_HlM
N:-lg9)#\^1rLG04TWi\##iQ6b3p]aDa*RH`SL456*?SCqU&5qU_aV4kPGVt-S.CFjA5,tLHVs(
4F+TpdV'^rfJVANdQtW2ECc[V_eI&?@GJKrbF%+!aGkS9MKI0^,2o$T476VV"+J92\/%+0)*@U9
L+_nK@J3tGP[g>]@XDAH2ct9#TXqu,!M;f98`65?9Lstt&!dA$&J42TbGh+:@+P'\,7\+AVU4YA
mrs2AGS+0b(T^,r:UXC9KD2>d,J=Ide$m\=mK<$PnGC3F2Se/GK[gJdTsmk_Ee'^]'p*u[\i6.s
SP-+UF8!H7<Bu<uj_iN@-56)MAp0;GYsZ8o>*GG_?_d)GIdDZ)f*>Ao,EMg)eW8?daY7V-iA3IC
9fW@ZOUhcR7K0OP4<!1b,W3P:OGKSJ,Z'V7n[3[Ac2iirh:RnB#cR'3;NWYn\$mJB2[mn2/#.=a
`(!<c5WH14T(g.GQVCJX"T7/`Te!fFZoM\JT_=%Baq%iBoO1ZkL:UC;*QC=tMrR"tb*i!eY"q'7
`k0,3r@1^SN!ps0+`H1<h@4EaSF4s/L*Mpg]!/eS3TYf;)2LSK5usjL/(&Gt3;F,(n>M^0GZ=So
`H02[9+C.-(?QL%84,<qUa`cS%!6c5<c@G`5tXFXBr\Y'S+gVi+Wdu.*>INSl4pl2?-T)^*/14@
RXdkaqMJ(=^J0uN,-b!iqn5e=A(8pP&Ef(oB,N0onu?#Jh4uuO.p:#d;m<&fDEMp8&_15IoVdY$
P(#sXK<!EEnn`8\l=KGk\5:b*]_t7[7;r@A++)-0\Gu*DAW+BNYZ%ht7)?u/oI8.K<[Y&/.2IJ2
+HhRj@`2-<e=D,Yl[AbMUT(Mu8m#<PBKY*DB>@Yn1ktim1>dqATnE7;@OHZS!"GAL+#Dkp$gE1l
Vt_Z5=(\0\SjODMV)[MaF6P94i(iQu=jF$tq:7g2_!^$#&uIA>NQrYdaQ.6RpG?A"\ebfCZ&"(<
LU5/D*KXSPbpLuSRlB>ijSB:bS'8R(Og9ZY7:XIURNPZYBE\46IYLSL8lNc)6K>c&[^?;H:]"El
p]XTdlc(hu>?OBP-@*"$m%u3f<(]Gu6@)+a-<@N54V0jNb_EPZ&"B#gX+ds(/Z(>^3+u>nj"/;R
*_=S7cdCr53`U0<`QL#+B9sa_3qB3YhT!WY#EE<LBfHeIi-nHg(O1IgNqOhQ4ioY:R=)]j,K&[R
^a.8<&rf=#8,t`]LdU`/A7oHSmFX7WOHH,k<=%p?Lb=EiDbJbHeu^=a4qfr0Z+P:HZYG-q1U5L_
L3i:$cKU/&Z?:k">P2FjH8q=J9W3J'T36HSO49-ha[t3JScnDCRC/%Xlt$GohZQ?nPC&aARb*0\
?upr"DZAOt)o3Gs\oLaHY4gZf&jF;-kt'44Ah!p]rD9^'pIUSW&'u?j'Wd0HKn<\Dk"J'*i!2Y=
igQ6L=X.S]NM`SQ.Q.r9oub5-2HYbKE=!k_Ts7P3IE3[sX^rdfp,$l3#W-ks4?S9lOJn7dM2QV.
$cqCYkFo&,KfH*jrVPL*3*6G;VN:5>!"F4,-DQF=FTQSN01!l_3:k_)-.W`]b/-IYY[[H5*i2QZ
Au5lH`l;QaK=PAoD;5jUpHDm\mcETc3%Zb:R(#o;ee+h(#6,4jq`3e/)U1N#TU4%moG5A0i=%[T
o&7c2rm0PI]WMOLFf_Qf#8\lALL87j4>c,Y),hk8p]5E/lb+D>/Tf"\^Ml%*iUP4!Ujm,D_!"(l
W@_XjNVR&^WH:ju^o0,$jTDNoXLt]&C5FDOL?ZAY!q9LA0%i'[\DMe/#+<W4`V)Ch^M2`Bf'T#2
6:V+0CiHL^lmDbKf(5I)^W@Q_LZS<qL-m775s#6UAq,j9![R)-3WI9#)`i5CI?e@<Y&Ge7o4Z4B
blJt<KkMn!!9N[?H#sV\d0sUg]s#i0K#n9:1LUo:7rH(:Jn*(I.rK)<DW,Hi+1b$od:%Q+I2@";
P*#:sh*6S^M0\SQ_O6:7oB=NXgTYpjf7l_Pem8:9p=7?Y$(ZM<0#[t&GF-joh=P#b<C8t+C[[Ba
Y'($$5:XTfYC/!JnU.n;,cCsEkn][UFs%6M.("dF5PEcV*@3\gZthnre%Ht8oHJ.qhtPp?.rfL#
6\)u22E9%Nmhi[OA*BQ,UXBB\8B2G0maI1OA,9(Gc\V[%.N.`lrq;n"[p'B6!nXC.BAZ1R"Xs*E
,Q17#8UD<7$Kj]VhY$TH4[/1`s3[BCpO41j,N7!p\E*R<'bj\g/+EuCpAp6>$9gre1jj7c!.X7"
)a2k7SE)nt0if2%*=%@CpR+$K5).aO>o45R94RVGC%NkgMuJPuWD^ZfPj^6[JY.@>`hJ<ZlF3=@
'K.3q-uR*j9J^=Gaii.,M3s:kfbh;2[9$Y?6D1=Z5[C&4Vrl)@`$Dak;nAF,bFEOm>]@Jn&Y+kF
Qhi=@lcTf&H@.WM/[.MX?57!sc+M\nSs*iD09fLF;1G[Bn_2Ml;1X$Z5o9S*p*R2HVb+icp:?'?
\(uYfiNiQd"W96-;Wp\RqRCW%_-X#Oh<@;4l1;m_6H1+<+/#\s4*?Tl-9OViB?.i$amS//eFodL
EcBb1MKp9(bTOO?X1a_JVs=DnFr$dRK9tI;rp8^L)/+>$8m$j@#03.^h8OhR,@'8B4GL]JFG]7k
=_XiQ$6\XYha9,/%s/A;P;AFkY<brDoOi'DPHFPX=nXsDXuPY,Cg5STWNlUuUQ"2^^!MZF^N4Ml
#Nk%DS%[H6IXo*XAW2%7Gcar+?G9u(ek@s0VS,I*P7-K%>GLR!*($d'pI='%b;Z#A:B4VrX/\"/
>c5j_gILKQ$Gsq`>-fVVcND@+2db3Y/G,1f?#UjT1`pMGGc^$/\CJPD(-5Y=/3^6'3?F?6A0<=_
R^s0=F5bT)f`rJq4u")3/.g-M!PUmq=5X0uBtn7X:D:UYmmN#07#OO,WQVRK\>qF5m3)c<R)CaV
OKHiO\)a$[^tM<A,I`+;2(As`3c,>!.`l!EY\c;^_LB2>57Kb11<o%ArCJ+MKU4&.Ae/<q61IaA
H/'eE[u+PnO+4@t?tj&ofIDMY/4A*>m+Y@:O"UrOmqQSql`kB/onl<;9l/ttNt<Ri@c"#P0.bs!
-5D4B+rWhnq_1N7</-4.*rDL\#O*>W5q\Jj=.$pYH'T(>e+_3!]f8!eT-H^"eKUBr*D\:S$,Nj'
HO@C$n5N30fnf)<LeWdQ+>uk&AmE=Ka(cDD#^SWGdaG!l6QDbnio4G.3>t8Z&DmEP9s_p>W!)P=
Pnd;R9S9X(/HnrZa3Z?!2H,VfXDsSq;CtA5cE%];lmuXB`R1_Ek2WUPbk7_iP4;Y!pH%QTS*4l9
SFa[XjuT^?3N'>n^MI7_1?P3LQq[6kiV#<ClQ#$1R,7Mh@4-5KZ]('%cQZe#N'=oh\CX\Ze.cQZ
P08Ml#F(p!8=#d-T`S-dW/A)'CI)9L3ErP\=I!3XdOfTa/M3*-qh<.&E(!*5nA0omed1Jn%M$B-
VZ1]0H/cuLP0%/3U^bnFHr*@6@C[2@WXq`*k``as.$HG%5iEb_)-:*HA8!H)#A<I.3QqlT6Q-1h
oL(-^aZ;!Egs*f,`HbX8<ZX>VeAh:93+&q':UoOQ7"asIpO(8DRf,i;JPEp58JLNt?+^0]U8IIr
XP*gugREdj-!^Wi_5Yk[k)QdUpV?M;qW:lUEVkO#DRHYdO#\+s]`5"nbPaYQbUrs/@g>/+P%daf
e(83`j]K]F))rIO's1`UI^oI'kCG%@.QTAEe\[Fk_NN?/;4X,Y#%@oki@VgMrhIJRlbV;nZH+#:
3(IOE:moQ1B@AH;FVV=[(3%KK9MS\.8Y_A!JVqr6&Et6MNN4tuB'5Ed^8^%6:7q;?CA%M_G[t`o
G4fq&d@cXcqg.PsPO7B0p#<bW5R('8Kq3!uLeYb("PW):T3^`\WI">Fj^E*1ZgV%(U#?qK,mFS]
7,cP-+H22\Lp&6X2-TPRKal]q#%MrOU#K*<h<<M#6^/3JBpN_ihBWD.0g]Upj,7J`Y=4-I8TJFI
4XBXgA9h&k7&cF1X@R2;!]Fd]H",7I.p$Tp+LZYl^90N++kOR\nq/BWYQN:`)LI`U_Rm5Tb)4R@
`!EV*Th[,:e`p*VMF,tdg[e;m,NH_2'X3@5#1,nQWr;/P-EL_PF@:LCA5m88UK2V5>GNiLSkQ-l
!W,0Q4=3K0't[hX'!)6Kq9]t7+X8?D:u_7pnW#7kE5X]u9T@)HmEN$T^a3rJJ&e9!>U+/,WGX^\
#.,Zu&$$4%ZFt?;TKHQ:[P=dEY/XG*YLa.$%b2>d#Lq".OZNXHpA6mqjC'#=2B:,6T+%DJ/g3sP
"R^Y>'bo0t#c'Nbgmi#9]g2EJY;Nr9!ZE&.9cB"gODkP#kLqj)<ORD;H(MF[rRfJ+VNchI#3ai'
lh5VR6ACcEf'2dInr!Xkb)[J\!VO88h^&[/p5`PoTrX%^8r`+@)%2Mq;4AZoJ\urLA3G'?fR0Le
/@\*a;6ta?cUE^JnmI#YrZE0Pr/JUq_R&]`GN]AnikbRXJ0*c_'kWgj#-AqC[1sFa7s7q:R/'4e
)t+&VXGpNhk(%"hDcQZT?M0oR/+<R!?/")fe5C;k>biM:o`sN#"=<I)',V:AXuY=cHjij?*qS:!
-7I5V9lS97;V&MU/'H'82Oa0-d?Mq!kp]dN:qB.u`n+0+'f?d6i*8aqIFu)>0!G!mG!.OGj>KpH
gg`f-j`GZC[L)"nm@ks-SKa323a7o@-E'9P\IkZ0[D9HkPa(7[;gVA2%n*:Vq]-7$ikR4Wne#,A
)u5b9Q48T/D_L[2@HPIgkprmDa1uuC2WGiZo$kke'=QHZ\Ip=Ks0ag>FSiX(*qu#<;/l1+gOBS*
^OWAYB@jRiBG_H4f8g/TpXp;JjgD/bbaIM9f7j.[:p''\B**;Pq!MLsb.$J+a19de_Cg4i04B6F
6Ftqh]`OtC($H&2Wp=)EgW-&oqNP:UDpX\j*=!5a(M4+=9?3_<1Zs&c,tQ@J+->P6Eg/O4io7oR
:.Ba*i6.m&INUao^%r5K%rN\C&UcFu6gpoJi#UaF'HAOTT=b8BU(I(bR=B;u/j48JTR]-cb1A"c
&"pB!BtncME9jnNc21iu[b"L;_`tBS2DZ<969$Wr4JsC7.N5fi=^f1=7;B-HBkX3pEY;a(0$18U
YDhh^.bC],U=lTpI9t<?W*]2M%i<Yl;XMR8mFMYc]F]k!A2Pf+o<Qk2%5Q]`b2V_*/`ggN,@&=g
R(].edRI<Xe,X\DCC1Ki]_mA=m,C@Ad&dL.nLhsmmPu4_YW7t:lMf^"$ujGSUloVZBY:3RltuHp
@qH0VE(b/sYb*$*rd93>+W^XbCq!`&)``C3DL6X$YmYs'r.fH=#:2O@!6YG&PL7$gdLC!.>@>:X
XUc(0Oh+h[=!iJ0C6)`cRP!9ol;\=*W)Mtlq5MY<.n@e:Rsb`9l$.9E"IO`=JD&EpbL7M4;AcWJ
ZBb66h?^s'MUd/_nK(o<h>lG`A'uT!2:9sjk&j+.9Pup#Z)+s<[N)9XdajkMPUjh9.[ASh[AgrL
lK\""Yj[_paO4YN,aCdV+B3(:ko&.lfid"64?$iS-7:r\Q'2^=p7hk)*k't`;R=@3!kg*.C1#o8
W"UNg<k#M+<r:Vbo`gq6itM,*kM$rJhU(<_/hi.XMdGK+[HR!n??\TFG4!bjhH(L#f=2l=$k3IV
M=q.2RbCr7RTbElN2#S-I%;=G.>t90WmQEW1]dF`)B,e[WIVoM`?[$!T[1_/&4"b`kE)=lkr3/2
?K[Dd4rf(^1c.Mm$DZG`9&2eI[NI@j/&t@oOqc&h$7I[Y1n@9:L`<Z7720JD1NdMURLA^]ff<r\
"ZZ`/&!SQ'ECNI!ELrH35kM$-#\-[O_h#Po,WHsH7Tg'*h.nOal`;F5FIf),]V.`##V+W1ii6J;
b"TI1BObLX/>*b0?a1`d+K<@faDY2t/DC$IR&M12K1!p)e<M$gn2D%R\aL",ii%_kQ5,Vu[T2IS
Q@WdY;4I&$SXn_X,PcVCcoZ?4>b6f6l^"Kt,E4!,LWjo\#]0OZ:dcuFk^d'KYkK6-;>jg;kao5(
'_;*MHdY[[T=FeNa_.\6dr19-b8Hp"YL$u+<?Y"oO3#D(!]`fr(Ki3did.5]K"/(J+ArgcR?F46
">WSYP$&4)",/d%h%<qD4bke.Ot"+-np$q2Hu'h%1t=FJe`^rR;'r7k`QhA2Ks``m+nrK'AK"*_
#O3:'Xu]eQQ7k&;9qVJ#jr3iZV(fiiF"*'0kK@pH^g..BdaD(#Zu2:HXVtk<Z9GBWDVpca]!sGp
T+%L"kYT8&01DBoBGBq9BLjr=h*To.SOIR8T"=L`)P]2t@2?#!Y$jPI?brN6T0Iq1"uBld7]IfL
4OPAc(^7qHGrD#0bT>J(17^'IR<ss19Y<i9PO:,tXreJUlj8\AUO7cbqfH$,J>M<l1OSWGZ'4)e
"^PKMK:ZG^44Sh\!![V<)6Ccn'YGBp&FUr$5!CG*b;P4H-?<sj$7::[iDWf#=+s&C!GPM4H$io.
;1GN2E#T9I#"O5/!?;^\H-7?inmlKDXQ)1OBqM$+hRU\:h;s$-pY&n4jK8kHQ1:Z4X6T'e?j8Lg
f(-$;qWs_]60:aF91`!_79q;j&Afb8FF!`k7%hrVcjONl!56>R9.e<sDEYSlI-?oIqWZ0J-S(?Q
imZ=3AMR[l@URo-YT&63`uYka9XtKoUYm[E*-LZ3IpP;#^KQ/&>\2W2>_slDi;0n2a.(u4(HP^5
R%`a2bGF`2Xee).RN]Gs.QI=qfk"`(SYjW)m><[kdPBeT>Q:^?/i4;qCA7#'ar"]%Q6nmO:X&d'
f2!bRh\Vd"Roc)@T:)e]mP46O;,Kcf(:io`62MU"8RE\=92R(%SF`'bc5li@@7+,F@_ZtDQpO/9
>Xerj796sG_YI!BStoE0<(ad,61`J`?N54toP/`1_f9?R3G:KmGbUI+D1s4:<\*uZkbDd?cj^rf
B\7A/nUCR2R9JY~>
endstream
endobj
9 0 obj
<</Type/FontDescriptor/FontName/WDIHGY+Times-Bold/FontBBox[-24 -19 476 691]/Flags 65568
/Ascent 691
/CapHeight 691
/Descent -19
/ItalicAngle 0
/StemV 71
/MissingWidth 500
/CharSet(/colon/eight/five/four/nine/one/six/slash/three/two/zero)/FontFile3 149 0 R>>
endobj
149 0 obj
<</Filter[/ASCII85Decode
/FlateDecode]
/Subtype/Type1C/Length 1602>>stream
Gar>CHV@@N'Yg!_gT)$Ce13%YHT-3a_:dgX<e_gk0fD=LW"XF^o\()WJefb.X3;CV9gkDBDUOKA
Q;.Pl.dDaLM2t&0@XLjZFCE=(e1F<UQ[I*Fen!GUqrc/ucK"X\kB@D-"9oD_8Hraq/=^3rWm.X>
J)g@H,Tdo>:D#Tl]R=UqGRC_BYW*Ik77\?L)C^[TK8p77rsmP5&gEK\m;:>*m+(2EK@.f@<bAIo
MiU[/c_Jm&[;8_5^CbW$k:ddTClDb$Eb:fs_HEF$XA6hpRn^l'_-Ch93nQd4T%!S[<Y_(6;Kdo=
CpMf4Q)mRoa!Rh:Rd%[F42YSXWc51F2G9a/c*1p8ASaE*2cWuZ+!:h5BSK]S3-3[;3HMV"#U5M#
5_K_)@NrW"PDF0E:.,YW$)sR&&L\LH`#opl[ZF8d;?Qba3miKA-!qGi?C,:Ud6kdiZ)*D6_OLSN
&cYIWn9+0%0mOSg#)NltM'Al?>Jto@dL(kRV:cU4d9IS+rJ"fJ%a6_bK075G#4\'X%)6,pTZf"0
?e@;A5MtZmoGZ<mW0C+1JbYPSB?tkOENDJl7r<WDa,!!M!@e]Z,_4nZ9T%"=?e%*dfC/._hnJOZ
U>).eEg<gG$.;l)W-6Pu5,_2MhHb1.h50od&jHfGq/i9#(kbEl?Od:[6!8?"[RDDZa&=Ys55=sI
YoDner71^,Qrp]'b$\34oi3>C$Je-rY9*/DJ5.8[lWZ_tAYT\p;1U702!;2U@j-lKC>-eUnrmlP
cOW5GK-#h?!@h@JkVDU8HE[*IImEY6^>`^<7Uq$==X/3*p!r]%B\?+`ol0oa#T]8@gu3#5/lCj0
/72Tmc.O,7PueAi+UR!/$=_:skdMU3<jpO8(E]McO085b*#XWYSFM$7.V2=Rp03YA&.0Ufis>eu
7,t7#2-fh[YD,N$?^rC`S<#&WUpM#_'BE7(?fEJjC_WTel5GI,>Vlb.'QA"t/Dt?T_J]SqacF%]
JiN`<"(%uLA7BqURYII7^@gQq;]FgC[_XMZ7^"3g=Q-VG+"^Npla@c]6aWPggplXTE<NX&mNoO?
f;J?tkuDaujuqE&g4(H?nE)PM&(q,$:dTbi0C^\omRjZbYSmblcbtA?bA"WYWR)muTheu#pCs-D
%o];>45:UjEJT&<!+Lu:\/+fn2d3QX9K[cf--'0%^SOt6j/]kI7a]c"5ON<#gj="d61gJLHYh](
YV$4$!Peu#.BskE_M.6@^g/;1j`HiS>AY<=<'Wr<=pd#]Nnt$*0C,dH_[>)!BA]7>Gs,VI_'L(S
-RUNq?Qg@W.4;E.AC;TKc@"9:G7e,T#C:\#/p6>)kAG:*'I_rpblF0c<f.[@+.!\DbV0Hc>\ru&
)"K?%m/_;IhK4o$O<=h%(4"^EYb'hIHUE;>^$lA[N/!$B5`Ai.6)2:qnG$3Z5k]@X*:-Y+_[5ou
_GO>P]J.RrEpq^g[r^kYf8^;r:3R2!#3b3EkM!](ltfQ@ZL)"X(*WS#d^jfe"<P/u).FbWKR'5&
ni2'sg7Is>B7#]3);t@3Q#JN5O5oePHIe]/kj9+4]t):I.M#nMJ^kga2]gToT2-p?[T+5>&H;a&
.ooL~>
endstream
endobj
13 0 obj
<</Type/FontDescriptor/FontName/XCGWVB+Times-Roman/FontBBox[-9 -218 863 727]/Flags 32
/Ascent 727
/CapHeight 674
/Descent -218
/ItalicAngle 0
/StemV 129
/MissingWidth 500
/XHeight 460
/CharSet(/A/D/E/M/R/a/b/c/d/dollar/e/eight/f/four/g/h/hyphen/i/k/l/m/n/one/p/period/r/s/slash/t/u/underscore/w/x/y/zero)/FontFile3 150 0 R>>
endobj
150 0 obj
<</Filter[/ASCII85Decode
/FlateDecode]
/Subtype/Type1C/Length 4966>>stream
Gar>HGuR_o\j%nrHe0IMjJJ)D'5hTn[oJ<&XjCgb`MjRW&<KI$1dWlA@8$qE+UQ%5!>5GW5U'^*
5m3^S'sS7N>$J,_gS4H9p9qB4YI7_T+5Z.^ohOk%lhthTauV&prq?>GrVM'$n$&bdo-bB4'bDn;
&a-?TOlrO`r4c=]93Ch-oB<%;;BhV/D>#Yr.2CCU?AJ[8-t*%:kFOF5iEr1r]o0,Z.>lAZWU-1<
E^au>,VuJDjJBAR]mk=hQ'MCLcg$=BLldSTs'#f_,gM`eb!MCM?])d"\KXNp.sO-$P-L<F,mQal
V8\=nr/gQ'#K6rHgZ$\YiklpD,Z9Ic+YO1J.Io,8YD%\4?H#%Xm$-RA']t05N]^jM4<c%#,Y";,
-r&%bpD&R[?J$Z)CtbDG?Vm[p=(N'ffPs`8-o3ACE`ed:.Q$hKYgmZF0;GK/WEiI[ocgf6g-`hW
EE#&c5eTZ6;NXok[>>6e2H*hYXjf8oIHkt?""K2^61(HLWC>=Ke5OlG<"R$H";HVp`fudX:Pl&(
=c'6+kO"mcQ6".456%JTk;[1G+1YUc(P*,?\,].Z`@"h*n.rA`+A^^`]H3^VE!-RQ9Es9Y\9;<F
_K19jJTp@9^tD)rM\F+o5C6P>nK.[YS'dXHMcf4>JsBS]E)+0=/D$46<shndaTI]k/mkBUWR`@V
M4`^62g=VR7YNuABa#n\>o$cN<S.?7FP+^U!;eGq5#*5+J_]n(k?20:i(Z#oB)6e%S]t<nJ=s)P
P9_@&!6#e^$0>!9ZeQ[s7am0J+W^ca:UDth+F'bNqS%cA!K,=)'E(B*h&r[thh]QC>RZ'PS_CSL
WntHiGRp1C8];<0Cl*]489.n`Xi39?fM;a$*-?N3(HtsFZddGsq=W9]<0,t1h3]CTb5u@\_6DZ&
H-=aj!dOTH_7S7/#':%.eR0f;_`3Z!?LU`Q+2<W(gAL?]HW'Ip;FPe[fc!qVV2J=]nB::kH`)To
hE%uo5f-9B2_l[k\6%lIW^ep5h]G^@Jpr&7F"qGbYPL3%ihK&XDM&,`UaeJ.0LWYd>b:fQilJUm
-hNIi]<UP.hB8n.Z4oUQcK.3e!r#C]V._)`s(Hr?fAIKmn4AJt[.%tgfG[.+6l'=7I4HU0(9N&g
_#sQ1ISh5IrLWPt(p6*G3</g%@U9*6"('<?Et\kFQ;:gP:r,jml*VkM`E(ZB=s-9o'RYnq3`e:W
a-m(4.AL-Xd-B-OZ4nXI:n5T!e^\dMnIdJ:TJfNfC=pY1^b9ZhHsC!c$J[DKZtM7cgC;MAXl_bn
]1jc$"9d]hbf-d[ZG)i;gZ`AH9t'o`7Kbg=92\3s##M&9ZsD!_W6#LWg=1"^!THGm5B4-DY23W(
&2n;CbUs#[gb$6k,-N7t<j4#EoM8l"`YW7PG,q!7()Yfu?96T:CC<1I)+T(_R(!]8a4L+Jpc4@c
>?P*DWi@O=!])T8%CM;Li[?@Za^)2)-6[D*s+1'hU?V"fAP54M$;qDX'-pIWRn?f4=k^$j!)#kM
MedOf=IFDZ;>$leZCSg&MqQ]fhR_dne`kE*jq$es((oi3]NN^?\cp.NHm^T>8mZ9L#3%i,,TY5R
jMD\<@qIIa5'G<CI,9kE(il0I2RCb0C+_@]`Na.!-0:54hdA4//C1&Jl:P8,jPBTmI)K=FRs+>G
d>l<LTrt(;:MhXNJjZ!p.j@(_GkZ^H1AEb&a*?jX>-q!i2eVUq`_-]1J!P$3mP?\i']Fi.28C/-
K?G!h7[+18*[&!^X#2:4V>;/7%iuc3(\(\u4gJ<#:008dcot!8_7J)%?]9q%GBXEB-90t7(KFCZ
eiVZ+Y"?FE=mMp9H!0c^-5?t,1c\9$NATdFK46^[$XS`!e0bhp/cf^&Yb/3g2bDPMOn(to2pSS3
X6PS[8942m\>e7dksS8I3n!4/XC83=Bg@$A_q:9*Q]N;A)fm"Q3`M"WY/W)kj\3MJ&OY$@)KQo3
fMQL6o._f756nZXgM4E\$P5kt2I;3-VLps^VS9l"rH0j`"MOD*^07SHBFl^K2'!Ll]`:c1H8HXr
_eG^u#d2mK'NO'k[W`_][ae@-<nTp,oi2K4LY_oGa3JeMie0Ao$/M:-9+r*k[1\]5GmR?g;_K.5
4#2(QaE-aND(QZ11<@BuFHfoPYC=AZ;G1_d5$ofn/OD-a4ua^c!U/Oq0OAuDqPhe6^[>^m^1Zq!
2ckm$c-kY5:H0Nm)][f#mVVBq(:_J%)UM^Q1a=U#lO3<[(:1_WVpp$Fjl==4aG$'fp>0P]=9g\U
TGKKOqGMbbbCU%e7-%kq:"^6_%=Z\6jSE%]S_`](MXKFlhiX!=Zdk#Y!`Wtcc`Zn1_GK3T='.Cn
Yk%7!]P;UQhdT=3.*>G0!a-D="OpH'+?P1ql:]SpF3Qsr5PlrNr!:Wd0Ao8<ITWj23\s>VN1W=\
C3]=;g%?VPY`lOdm+pRU.J2)kCkf[B^dHD_K.PDhqjU5Ob,``$-IL#4LB(RlDCTk("p&I]gF''r
/f@j><Sh2(W%jW<"l%2T3PNGo9V`7C9gP")8"3_]dNUIs[2Ng\G'/e5\PK%W5J'-ur7^Ba]^-jT
%]*7<qAYqF2LuqTT@9;O<p(J]rB(SM-Z@;SO$PI9qc=X4HN*&6LL#X%:/P;j6f)!o":;Zn4RH(:
:T[>`:hF<q&l[mrd5jgi\JL.V-]U(Y%1Bd0R&db'"93]ko$#DRYV>B&h>2pjq^27ZIkD>+E4p.[
Kpd#b*q3L<[L(cC1dc[M?*7CScpNrsadoc$'&(JO8Lj/[(7-)U#NoCtBUMm9DJ&V,4lDkLFZ]F'
dOP=#R6/B%HJHu5W0puM@s(#Oar*,:aiMLQ-99>D\>g0A+IH<OZo3>t+i%W2Q>sN?:]_WeFi]-l
8A-`F7)FJa?dWhC+`%]^395AUVqZ.JGuI5HVZoTE!G9SH-Bm;"-s#IJAI+%2IYASHcC%mDIX!1c
?KA<K%4phc@$jBd`8UXT%;E-8-jHO@a=\/K2%<MkK(otflk<l)?@U8i^*@u%,"a:"92[MZRns55
_U$hAnDinoQl6d(]6GX:iU5XF-$0H9aB``"5=WJHI[oh9rQ=2EfoM=c$mAAmqMlV21<NdSc+/hR
('NATXmO$*?+Y9u/,&(^E`:.:X58RCLVG1f\EH).516V7>](*]1GkcZ&7<>+i%b3`i7GYeE@9$Q
XnArHTAbqph**`f9aC8[hZ6?FYpo'oNaRQ>;4EJOkf1]JW,D.'fcjF9Z.a$9QKaW)M2E5EA'.Mm
("qd^N5(kYj6aHaj-.?TI4bE].(Yp(^<oFFFi!V!]R&(d]E:OWNqt5PPmr!g>uc#\"<DRXFV"9&
6g-)dZ*\<D+Yh5)b9&EdANkb)G6>G#kR@b'kOn&1j6_$ApfUHGrgnVe2fu@/9:aN_Cs?_MLCV0a
ZE/JddQ`"*r'NCpq2"^_%,T+UCc-[_+$\H515b#CcHONWOp'-4UFt9uLN&,lRN:Sr`6$s3oT.k_
SY!T3T+G?0(7R^a=15"pT^Xmc9sou>=#f.e9,#PjB#_6h1qJY!06Mp23b'D@5B-<rjIq(rl]t&%
Yg0FVm`_j'nAR;^;`70%E*_rj=)[+aGCPrl*1]D0\rkbhnQ:%f.L(,\>i#c%\6\5RTM9BC1XddB
rO[NspG.Q.e[a&i&1<&Y.kW-73-Yn!QS=b"5N)DW*67QtdqPiqMpaC]_L8stk#WDB_L5,W:V)=o
Gi>Ej]8tfZVVLW"P"t&$=(=6/#5jH]=*6Y=F?C<Q)Ls#kL+Rk%(u=-Kg+oS`)[8Dc!>k8@"U/pl
>CiuU]rf=Vcn6"1;;H1MlYAt[bd.&g8_$Q=#FrA9d9I8.$S*\NrSg6.#0Q35<_X5G'&Y0g6c^la
\[B:X@B0r!N&EJt^sZ,e?Du:[R@B[\PBt['O]=A)\>T5dVjC3Q3!AZ<-7]17LRY)R\YE.6jUBJ%
Q"m^QZBPIre)?tT.b;ecU.YVLAXpe4Zi4Hhm9sJ(j#0jq<\k3An'j+%2&DoFXY.c56tL=iW#E>_
SVQhJbl5:jZ#P\j):KWRVkoTY#;\?^s'^6kZ0ehWr*m:=^*HiLlMP:.p/EbZjLIRh<RZIf+W^^+
l>YJESa@(B6O4`Ob@9Cp"4/*A+i[m9!]Pq7f!M*n&D)NjM1O6A#[V1EKSrAJ,MpVdU.pT/g^S;+
3EBE9)AV0=J/94'pmpW%gup_+nHDL.*(iY?D0Qc-c04d&'r058!eqG/r"[d2Y%!GID[]LQl3\aS
D$DX$5Q.5PS@i++X>@&XYH,"-0=NIPIq@^*ZRl-?Is.t=Og4<&H=qqjq6AUlr\cAXrgtd4l[C>6
G0L56YrWq8f0_I)1Q/Ld?%"+OHB4En7%QYs2*d`m[:^cX>lHQ@LF-2ZLSiB>A`PgW#]Y/-r\I\.
XN9MLS7%.P9Z3nRCY#<\(I!Y]:13dJIpqNXVONNWaTFFbc8Zs$_Dk`G=PHYN@r8W_e1auc;Qi)3
o$<6\Z@\6;9rYQFh-]mt2cs-ei^B[fr=aFW&FbRXN(a_u-gn]iB//k%>)GuJ0@J7I>]O[6R^4"F
P.(J\QTP!07pN@e.\E*<fRt@C?`^WKfg&oke<cYC@JPo80:?.c'/\YIr8H!^\dlK8r-/BR]sTHY
"-;gC=,";*#o-;ch>6K]pU4N@%_2,pY<q(dF@UA+/Go`(?H3"SDau/."$bGQs+:aedso!`2ElO]
GifM9[HYo!BF7M,(qXg:,'?P;I".)WBW47q]YZ<Q-?&i@Lq394oQn*#O4ceX967:Z_CLct&7q#k
B'2c#aoa%$V)2g*44GKne(d%caUhQS*IfR=GGl\2E'HNCDO@DRD[cUSghQ1k*:=^6H,e3F1fuZ;
pZ@Ga]O]u6&6FE#j,*Do2^*H2PTN)clpN5Kq8'ld9lPpd`;`$tL]Zs/mq3\FYCV6s0-0N#Z!M>:
K)8@;3W]BN[g"CZW;d$\-/]a~>
endstream
endobj
11 0 obj
<</Type/FontDescriptor/FontName/CFATFR+Helvetica-Bold/FontBBox[0 -23 516 724]/Flags 65568
/Ascent 724
/CapHeight 724
/Descent -23
/ItalicAngle 0
/StemV 77
/MissingWidth 500
/CharSet(/one/slash/three/two)/FontFile3 151 0 R>>
endobj
151 0 obj
<</Filter[/ASCII85Decode
/FlateDecode]
/Subtype/Type1C/Length 701>>stream
Gar8S?t!MPA7Xcq8BiSV/]g[]e9/p[8HB-3rK(Xh+iEq>QFXWga,HW.XKi6uF'e?Zo.YC[YUo[V
:?[&:i:f;3mhGm4b`%Jq?.5A9$S%&idkaT11dZi3279i7&0cjpQBhkLPqX'ZQdk$=oK3:7+JUJF
-bgc_26Xr%_&914-RU]Q+[)a/+JW$^0dS,'"f*_$0deh__(@GjZ_/GU9L6R!;o-Pj^ebh<R/1CV
-C#>s"=N=H/,1NC>`U)G^qda[DeN\*^`^E8`$!8H_S?NN0`qf91kRBt$qA>\*IQaGe]qh*T(4[4
oQSa@*7f1IhiiNOYk%`Pcj^\,qQ@X3^$/%hkb$St$9od.fLsJ[&q9FpF6Kl]<.#M[;>HcBERT-r
n$,-C5GifE'`EH1D=5Dto06U^cMr"b_=#nphdppPs47+MDJJ`HX0oRMVa9a_e0;>*)g7f:\M:q>
[OC=J_/Eqrh`R3=4tXOg3I[3t!KA`-cLYQ"G?1F+?b\,hk5;A)/puW)me;X6Hb-+s/T0BE[kapE
SAR9LcHe:pj-=euh_K"2^Qi+BI95gupoaSXa`k:Bkm+=LaU:<m]4KZU1K*,@N3E2G[;sS(:R92M
W/L*;iMcc/`nn&,Dr.;#1KLWL\##SSnES3tQ_\^2q0Fs5P!qSnbl;QB5C*prG:p&eMVR+"VXX)&
=.IFNbJ4)X6a#JB~>
endstream
endobj
153 0 obj
<</Type/Metadata
/Subtype/XML/Length 1424>>stream
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:1da671d5-c43b-11f1-0000-99bec6d2cb3d' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='GPL Ghostscript 9.07'/>
<rdf:Description rdf:about='uuid:1da671d5-c43b-11f1-0000-99bec6d2cb3d' xmlns:xmp='http://ns.adobe.com/xap/1.0/'><xmp:ModifyDate>2016-10-06T16:42:39-07:00</xmp:ModifyDate>
<xmp:CreateDate>2016-10-06T16:42:39-07:00</xmp:CreateDate>
<xmp:CreatorTool>GNU Enscript 1.6.6</xmp:CreatorTool></rdf:Description>
<rdf:Description rdf:about='uuid:1da671d5-c43b-11f1-0000-99bec6d2cb3d' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:1da671d5-c43b-11f1-0000-99bec6d2cb3d'/>
<rdf:Description rdf:about='uuid:1da671d5-c43b-11f1-0000-99bec6d2cb3d' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>List.source.ps</rdf:li></rdf:Alt></dc:title><dc:creator><rdf:Seq><rdf:li>Wesley Mackey</rdf:li></rdf:Seq></dc:creator></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                        
                                                                        
<?xpacket end='w'?>
endstream
endobj
2 0 obj
<</Producer(GPL Ghostscript 9.07)
/CreationDate(D:20161006164239-07'00')
/ModDate(D:20161006164239-07'00')
/Title(List.source.ps)
/Author(Wesley Mackey)
/Creator(GNU Enscript 1.6.6)>>endobj
xref
0 154
0000000000 65535 f 
0000065268 00000 n 
0000090630 00000 n 
0000065017 00000 n 
0000060850 00000 n 
0000000009 00000 n 
0000001047 00000 n 
0000065334 00000 n 
0000068550 00000 n 
0000080697 00000 n 
0000069148 00000 n 
0000088085 00000 n 
0000068749 00000 n 
0000082675 00000 n 
0000067906 00000 n 
0000069325 00000 n 
0000065375 00000 n 
0000065405 00000 n 
0000061001 00000 n 
0000001066 00000 n 
0000003734 00000 n 
0000065468 00000 n 
0000065498 00000 n 
0000061154 00000 n 
0000003755 00000 n 
0000005345 00000 n 
0000065561 00000 n 
0000065591 00000 n 
0000061307 00000 n 
0000005366 00000 n 
0000007529 00000 n 
0000065654 00000 n 
0000065684 00000 n 
0000061460 00000 n 
0000007550 00000 n 
0000009789 00000 n 
0000065747 00000 n 
0000065777 00000 n 
0000061613 00000 n 
0000009810 00000 n 
0000012136 00000 n 
0000065840 00000 n 
0000065870 00000 n 
0000061766 00000 n 
0000012157 00000 n 
0000015225 00000 n 
0000065933 00000 n 
0000065963 00000 n 
0000061919 00000 n 
0000015246 00000 n 
0000017594 00000 n 
0000066026 00000 n 
0000066056 00000 n 
0000062072 00000 n 
0000017615 00000 n 
0000020229 00000 n 
0000066119 00000 n 
0000066149 00000 n 
0000062225 00000 n 
0000020250 00000 n 
0000022047 00000 n 
0000066212 00000 n 
0000066242 00000 n 
0000062378 00000 n 
0000022068 00000 n 
0000023299 00000 n 
0000066305 00000 n 
0000066335 00000 n 
0000062531 00000 n 
0000023320 00000 n 
0000025960 00000 n 
0000066398 00000 n 
0000066428 00000 n 
0000062684 00000 n 
0000025981 00000 n 
0000026865 00000 n 
0000066491 00000 n 
0000066521 00000 n 
0000062837 00000 n 
0000026885 00000 n 
0000029772 00000 n 
0000066584 00000 n 
0000066614 00000 n 
0000062990 00000 n 
0000029793 00000 n 
0000031747 00000 n 
0000066677 00000 n 
0000066707 00000 n 
0000063143 00000 n 
0000031768 00000 n 
0000034256 00000 n 
0000066770 00000 n 
0000066800 00000 n 
0000063296 00000 n 
0000034277 00000 n 
0000036696 00000 n 
0000066863 00000 n 
0000066893 00000 n 
0000063449 00000 n 
0000036717 00000 n 
0000039711 00000 n 
0000066956 00000 n 
0000066987 00000 n 
0000063604 00000 n 
0000039733 00000 n 
0000041564 00000 n 
0000067051 00000 n 
0000067082 00000 n 
0000063761 00000 n 
0000041586 00000 n 
0000043344 00000 n 
0000067146 00000 n 
0000067177 00000 n 
0000063918 00000 n 
0000043366 00000 n 
0000045815 00000 n 
0000067241 00000 n 
0000067272 00000 n 
0000064075 00000 n 
0000045837 00000 n 
0000049000 00000 n 
0000067336 00000 n 
0000067367 00000 n 
0000064232 00000 n 
0000049022 00000 n 
0000051919 00000 n 
0000067431 00000 n 
0000067462 00000 n 
0000064389 00000 n 
0000051941 00000 n 
0000054337 00000 n 
0000067526 00000 n 
0000067557 00000 n 
0000064546 00000 n 
0000054359 00000 n 
0000055670 00000 n 
0000067621 00000 n 
0000067652 00000 n 
0000064703 00000 n 
0000055692 00000 n 
0000059257 00000 n 
0000067716 00000 n 
0000067747 00000 n 
0000064860 00000 n 
0000059279 00000 n 
0000060828 00000 n 
0000067811 00000 n 
0000067842 00000 n 
0000070013 00000 n 
0000080970 00000 n 
0000083016 00000 n 
0000088325 00000 n 
0000068434 00000 n 
0000089128 00000 n 
trailer
<< /Size 154 /Root 1 0 R /Info 2 0 R
/ID [<F6FE98C4C7E96B6F843B1B7AC13C563B><F6FE98C4C7E96B6F843B1B7AC13C563B>]
>>
startxref
90828
%%EOF
